module explode-asfix2me

imports
  org.strategoxt.imp.debuggers.stratego.runtime


imports
  libstratego-lib
  asfix2me


overlays
  CfIterStarEmpty ( s ) =
    appl(
      prod(
        []
      , cf(iter-star(s))
      , no-attrs()
      )
    , []
    )

  CfIter2IterStar ( s, es ) =
    appl(
      prod(
        [cf(iter(s))]
      , cf(iter-star(s))
      , no-attrs()
      )
    , es
    )

  CfIterSingleton ( s, e ) =
    appl(
      prod(
        [cf(s)]
      , cf(iter(s))
      , no-attrs()
      )
    , [e]
    )

  CfIterCons ( s, e1, ws, e2 ) =
    appl(
      prod(
        [ cf(iter(s))
        , cf(opt(layout()))
        , cf(iter(s))
        ]
      , cf(iter(s))
      , attrs([assoc(left())])
      )
    , [e1, ws, e2]
    )

  CfIterStarSepEmpty ( s1, s2 ) =
    appl(
      prod(
        []
      , cf(iter-star-sep(s1, s2))
      , no-attrs()
      )
    , []
    )

  CfIterSep2IterStarSep ( s1, s2, es ) =
    appl(
      prod(
        [cf(iter-sep(s1, s2))]
      , cf(iter-star-sep(s1, s2))
      , no-attrs()
      )
    , es
    )

  CfIterSepSingleton ( s1, s2, e ) =
    appl(
      prod(
        [cf(s1)]
      , cf(iter-sep(s1, s2))
      , no-attrs()
      )
    , [e]
    )

  CfIterSepCons ( s1, s2, e1, ws1, s, ws2, e2 ) =
    appl(
      prod(
        [ cf(iter-sep(s1, s2))
        , cf(opt(layout()))
        , s2
        , cf(opt(layout()))
        , cf(iter-sep(s1, s2))
        ]
      , cf(iter-sep(s1, s2))
      , attrs([assoc(left())])
      )
    , [e1, ws1, s, ws2, e2]
    )

  LexIterStarEmpty ( s ) =
    appl(
      prod(
        []
      , lex(iter-star(s))
      , no-attrs()
      )
    , []
    )

  LexIter2IterStar ( s, es ) =
    appl(
      prod(
        [lex(iter(s))]
      , lex(iter-star(s))
      , no-attrs()
      )
    , es
    )

  LexIterSingleton ( s, e ) =
    appl(
      prod(
        [lex(s)]
      , lex(iter(s))
      , no-attrs()
      )
    , [e]
    )

  LexIterCons ( s, e1, e2 ) =
    appl(
      prod(
        [ lex(iter(s))
        , lex(iter(s))
        ]
      , lex(iter(s))
      , attrs([assoc(left())])
      )
    , [e1, e2]
    )

  LayoutCharacter ( e ) =
    appl(
      prod(
        [lex(layout())]
      , cf(layout())
      , no-attrs()
      )
    , [ appl(
          prod(
            [ char-class(
                [range(0, 255)]
              )
            ]
          , lex(layout())
          , no-attrs()
          )
        , [e]
        )
      ]
    )

  LexLayoutElement ( e, s ) =
    appl(
      prod(
        [lex(layout())]
      , cf(layout())
      , no-attrs()
      )
    , [ appl(
          prod(
            [s]
          , lex(layout())
          , no-attrs()
          )
        , [e]
        )
      ]
    )

  CfLayoutElement ( e, s ) =
    appl(
      prod(
        [cf(s)]
      , cf(layout())
      , no-attrs()
      )
    , [e]
    )

  LayoutCons ( s1, s2 ) =
    appl(
      prod(
        [ cf(layout())
        , cf(layout())
        ]
      , cf(layout())
      , attrs([assoc(left())])
      )
    , [s1, s2]
    )


strategies
  explode-asfix2me-usage =
    s-enter(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "explode-asfix2me-usage", "51,2,58,4")
    ; s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "52,4,58,4")
    ; default-system-usage(
        s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "53,6,53,43")
        ; !["Usage: explode-asfix2me [options]"]
      , s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "54,6,57,52")
        ; !["This tool explodes an AsFix2ME term to a valid AsFix2 term. Explosion involves\n", "unflattening of lists, layout, literals, and lexicals.\n\n", "Observe that the structure of lexicals cannot be restored. Lexicals are\n", "unflattened into left linear binary trees."]
      )
    < s-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "explode-asfix2me-usage", "51,2,58,4")
    + s-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "explode-asfix2me-usage", "51,2,58,4")
      ; fail

  explode-asfix2me =
    s-enter(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "explode-asfix2me", "60,2,61,72")
    ; s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "61,4,61,72")
    ; io-wrap(
        s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "61,12,61,15") ; fail
      , s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "61,18,61,39") ; explode-asfix2me-usage
      , s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "61,42,61,53") ; system-about
      , s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "61,56,61,70") ; ExplodeAsFix2ME
      )
    < s-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "explode-asfix2me", "60,2,61,72")
    + s-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "explode-asfix2me", "60,2,61,72")
      ; fail

  ExplodeAsFix2ME =
    s-enter(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "ExplodeAsFix2ME", "63,2,69,4")
    ; s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "64,4,69,4")
    ; bottomup(
        s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "65,6,68,27")
        ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "65,6,65,27")
           ; try(
               s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "65,10,65,26") ; unflatten-literal
             ))
        ; s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "66,6,68,27")
        ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "66,6,66,24")
           ; try(
               s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "66,10,66,23") ; unflatten-list
             ))
        ; s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "67,6,68,27")
        ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "67,6,67,26")
           ; try(
               s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "67,10,67,25") ; unflatten-layout
             ))
        ; s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "68,6,68,27")
        ; try(
            s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "68,10,68,26") ; unflatten-lexical
          )
      )
    < s-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "ExplodeAsFix2ME", "63,2,69,4")
    + s-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "ExplodeAsFix2ME", "63,2,69,4")
      ; fail

  unflatten-literal :
    appl(prod, args) -> <r-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-literal", "72,0,81,19")> appl(prod, args')
    where r-enter(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-literal", "72,0,81,19")
          <+ r-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-literal", "72,0,81,19")
             ; fail
    where s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "75,3,81,19")
          ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "75,3,75,7") ; !args)
          ; s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "76,3,81,19")
          ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "76,3,81,10")
             ; list-some(
                 s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "76,14,81,8")
                 ; {s, Characters', Characters:
                     s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "76,43,81,6")
                     ; \ lit(s) -> appl(
                                     prod(Characters', lit(s), no-attrs())
                                   , Characters
                                   )
                         where s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "79,9,80,52")
                               ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "79,9,79,51")
                                  ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "79,9,79,25")
                                     ; <(s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "79,10,79,23") ; explode-string)> s) => Characters)
                               ; s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "80,9,80,52")
                               ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "80,9,80,37")
                                  ; map(
                                      s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "80,14,80,36")
                                      ; \ x -> char-class([x]) \
                                    )) => Characters' \
                   }
               )) => args'
          <+ r-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-literal", "72,0,81,19")
             ; fail

  unflatten-list :
    appl(
      list(cf(iter-star(s)))
    , []
    ) -> <r-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-list", "84,0,85,56")> CfIterStarEmpty(s)
    where r-enter(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-list", "84,0,85,56")
          <+ r-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-list", "84,0,85,56")
             ; fail

  unflatten-list :
    appl(
      list(cf(iter-star(s)))
    , [x|xs]
    ) -> <r-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-list", "87,0,90,59")> CfIter2IterStar(s, [x'])
    where r-enter(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-list", "87,0,90,59")
          <+ r-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-list", "87,0,90,59")
             ; fail
    where s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "90,7,90,59")
          ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "90,7,90,53")
             ; <(s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "90,8,90,21") ; unflatten-list)> appl(
                                                                                                                             list(cf(iter(s)))
                                                                                                                           , [x|xs]
                                                                                                                           )) => x'
          <+ r-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-list", "87,0,90,59")
             ; fail

  unflatten-list :
    appl(
      list(cf(iter(s)))
    , xs
    ) -> <r-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-list", "92,0,95,31")> x'
    where r-enter(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-list", "92,0,95,31")
          <+ r-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-list", "92,0,95,31")
             ; fail
    where s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "95,6,95,31")
          ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "95,6,95,25")
             ; <(s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "95,7,95,22")
                 ; MkCfConsList(
                     s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "95,20,95,21") ; !s
                   ))> xs) => x'
          <+ r-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-list", "92,0,95,31")
             ; fail

  unflatten-list :
    appl(
      list(cf(iter-star-sep(s1, s2)))
    , []
    ) -> <r-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-list", "101,0,102,71")> CfIterStarSepEmpty(s1, s2)
    where r-enter(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-list", "101,0,102,71")
          <+ r-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-list", "101,0,102,71")
             ; fail

  unflatten-list :
    appl(
      list(cf(iter-star-sep(s1, s2)))
    , [x|xs]
    ) -> <r-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-list", "104,0,107,67")> CfIterSep2IterStarSep(s1, s2, [x'])
    where r-enter(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-list", "104,0,107,67")
          <+ r-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-list", "104,0,107,67")
             ; fail
    where s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "107,7,107,67")
          ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "107,7,107,61")
             ; <(s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "107,8,107,21") ; unflatten-list)> appl(
                                                                                                                               list(cf(iter-sep(s1, s2)))
                                                                                                                             , [x|xs]
                                                                                                                             )) => x'
          <+ r-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-list", "104,0,107,67")
             ; fail

  unflatten-list :
    appl(
      list(cf(iter-sep(s1, s2)))
    , xs
    ) -> <r-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-list", "109,0,112,36")> x'
    where r-enter(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-list", "109,0,112,36")
          <+ r-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-list", "109,0,112,36")
             ; fail
    where s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "112,6,112,36")
          ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "112,6,112,30")
             ; <(s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "112,7,112,27")
                 ; MkCfConsList(
                     s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "112,20,112,22") ; !s1
                   , s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "112,24,112,26") ; !s2
                   ))> xs) => x'
          <+ r-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-list", "109,0,112,36")
             ; fail

  MkCfConsList(s) =
    s-enter(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "MkCfConsList", "115,0,122,7")
    ; s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "116,6,122,7")
    ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "116,6,116,38")
       ; [s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "116,7,116,34")
          ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "116,7,116,8") ; ?e)
          ; s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "116,10,116,34")
          ; !CfIterSingleton(
               <s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "116,28,116,28") ; s> ()
             , e
             )|s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "116,36,116,37") ; id])
    ; s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "117,6,122,7")
    ; rec x (
        s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "117,13,122,6")
        ; {e1, e2, e, ws1, ws2, es:
            s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "118,9,121,68")
            ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "118,9,118,16")
               ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "118,9,118,12")
                  ; ?[e])
               ; s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "118,15,118,16")
               ; !e
               <+ s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "120,9,121,68")
                  ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "120,9,120,23")
                     ; ?[e1, ws1, e2|es])
                  ; s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "121,10,121,68")
                  ; <(s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "121,11,121,11") ; x)> [CfIterCons(
                                                                                                                         <s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "121,27,121,27") ; s> ()
                                                                                                                       , e1
                                                                                                                       , ws1
                                                                                                                       , CfIterSingleton(
                                                                                                                           <s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "121,56,121,56") ; s> ()
                                                                                                                         , e2
                                                                                                                         )
                                                                                                                       )|es])
          }
      )
    < s-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "MkCfConsList", "115,0,122,7")
    + s-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "MkCfConsList", "115,0,122,7")
      ; fail

  MkCfConsList(s1, s2) =
    s-enter(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "MkCfConsList", "125,0,132,7")
    ; s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "126,6,132,7")
    ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "126,6,126,51")
       ; [s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "126,7,126,46")
          ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "126,7,126,8") ; ?e)
          ; s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "126,10,126,46")
          ; !CfIterSepSingleton(
               <s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "126,31,126,32") ; s1> ()
             , <s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "126,39,126,40") ; s2> ()
             , e
             )|s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "126,49,126,50") ; id])
    ; s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "127,6,132,7")
    ; rec x (
        s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "127,13,132,6")
        ; {e1, ws1, sep, ws2, e2, e, es:
            s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "128,9,131,97")
            ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "128,9,128,16")
               ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "128,9,128,12")
                  ; ?[e])
               ; s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "128,15,128,16")
               ; !e
               <+ s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "130,9,131,97")
                  ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "130,9,130,31")
                     ; ?[e1, ws1, sep, ws2, e2|es])
                  ; s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "131,10,131,97")
                  ; <(s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "131,11,131,11") ; x)> [CfIterSepCons(
                                                                                                                         <s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "131,29,131,30") ; s1> ()
                                                                                                                       , <s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "131,36,131,37") ; s2> ()
                                                                                                                       , e1
                                                                                                                       , ws1
                                                                                                                       , sep
                                                                                                                       , ws2
                                                                                                                       , CfIterSepSingleton(
                                                                                                                           <s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "131,77,131,78") ; s1> ()
                                                                                                                         , <s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "131,84,131,85") ; s2> ()
                                                                                                                         , e2
                                                                                                                         )
                                                                                                                       )|es])
          }
      )
    < s-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "MkCfConsList", "125,0,132,7")
    + s-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "MkCfConsList", "125,0,132,7")
      ; fail

  unflatten-list :
    appl(
      list(iter-star(s))
    , []
    ) -> <r-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-list", "139,0,140,53")> LexIterStarEmpty(s)
    where r-enter(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-list", "139,0,140,53")
          <+ r-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-list", "139,0,140,53")
             ; fail

  unflatten-list :
    appl(
      list(iter-star(s))
    , [x|xs]
    ) -> <r-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-list", "142,0,145,55")> LexIter2IterStar(s, [x'])
    where r-enter(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-list", "142,0,145,55")
          <+ r-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-list", "142,0,145,55")
             ; fail
    where s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "145,7,145,55")
          ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "145,7,145,49")
             ; <(s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "145,8,145,21") ; unflatten-list)> appl(
                                                                                                                               list(iter(s))
                                                                                                                             , [x|xs]
                                                                                                                             )) => x'
          <+ r-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-list", "142,0,145,55")
             ; fail

  unflatten-list :
    appl(list(iter(s)), xs) -> <r-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-list", "147,0,150,32")> x'
    where r-enter(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-list", "147,0,150,32")
          <+ r-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-list", "147,0,150,32")
             ; fail
    where s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "150,6,150,32")
          ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "150,6,150,26")
             ; <(s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "150,7,150,23")
                 ; MkLexConsList(
                     s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "150,21,150,22") ; !s
                   ))> xs) => x'
          <+ r-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-list", "147,0,150,32")
             ; fail

  MkLexConsList(s) =
    s-enter(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "MkLexConsList", "152,0,158,7")
    ; s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "153,6,158,7")
    ; rec x (
        s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "153,13,158,6")
        ; {e1, e2, e, es:
            s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "154,9,157,89")
            ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "154,9,154,40")
               ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "154,9,154,12")
                  ; ?[e])
               ; s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "154,15,154,40")
               ; !LexIterSingleton(
                    <s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "154,34,154,34") ; s> ()
                  , e
                  )
               <+ s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "156,9,157,89")
                  ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "156,9,156,19")
                     ; ?[e1, e2|es])
                  ; s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "157,10,157,89")
                  ; <(s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "157,11,157,11") ; x)> [LexIterCons(
                                                                                                                         <s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "157,27,157,27") ; s> ()
                                                                                                                       , LexIterSingleton(
                                                                                                                           <s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "157,50,157,50") ; s> ()
                                                                                                                         , e1
                                                                                                                         )
                                                                                                                       , LexIterSingleton(
                                                                                                                           <s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "157,77,157,77") ; s> ()
                                                                                                                         , e2
                                                                                                                         )
                                                                                                                       )|es])
          }
      )
    < s-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "MkLexConsList", "152,0,158,7")
    + s-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "MkLexConsList", "152,0,158,7")
      ; fail

  unflatten-layout :
    appl(
      prod(
        [cf(layout())]
      , cf(opt(layout()))
      , no-attrs()
      )
    , xs
    ) -> <r-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-layout", "160,0,163,31")> appl(
                                                                                                                          prod(
                                                                                                                            [cf(layout())]
                                                                                                                          , cf(opt(layout()))
                                                                                                                          , no-attrs()
                                                                                                                          )
                                                                                                                        , [x']
                                                                                                                        )
    where r-enter(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-layout", "160,0,163,31")
          <+ r-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-layout", "160,0,163,31")
             ; fail
    where s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "163,5,163,31")
          ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "163,5,163,25")
             ; <(s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "163,6,163,21") ; MkLayoutConsList)> xs) => x'
          <+ r-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-layout", "160,0,163,31")
             ; fail

  MkLayoutConsList =
    s-enter(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "MkLayoutConsList", "165,0,172,7")
    ; s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "166,6,172,7")
    ; rec x (
        s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "166,13,172,6")
        ; {e1, e2, e, es:
            s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "167,6,171,72")
            ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "167,6,167,31")
               ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "167,6,167,9")
                  ; ?[e])
               ; s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "167,12,167,31")
               ; <(s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "167,13,167,29") ; MkLayoutCharacter)> e
               <+ s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "170,9,171,72")
                  ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "170,9,170,19")
                     ; ?[e1, e2|es])
                  ; s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "171,10,171,72")
                  ; <(s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "171,11,171,11") ; x)> [LayoutCons(
                                                                                                                         <s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "171,26,171,42") ; MkLayoutCharacter> e1
                                                                                                                       , <s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "171,48,171,64") ; MkLayoutCharacter> e2
                                                                                                                       )|es])
          }
      )
    < s-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "MkLayoutConsList", "165,0,172,7")
    + s-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "MkLayoutConsList", "165,0,172,7")
      ; fail

  MkLayoutCharacter =
    s-enter(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "MkLayoutCharacter", "174,0,187,4")
    ; s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "175,4,187,4")
    ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "175,4,175,5") ; ?e)
    ; s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "177,7,186,8")
    ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "177,7,178,25")
       ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "177,7,177,12") ; is-int)
       ; s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "178,7,178,25")
       ; !LayoutCharacter(e)
       <+ s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "180,7,186,8")
          ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "180,7,181,33")
             ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "180,7,180,38")
                ; ?appl(
                     prod(syms, lex(s), attrs)
                   , _
                   ))
             ; s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "181,7,181,33")
             ; !LexLayoutElement(e, lex(s))
             <+ s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "183,7,186,8")
                ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "183,7,184,33")
                   ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "183,7,183,38")
                      ; ?appl(
                           prod(syms, lit(s), attrs)
                         , _
                         ))
                   ; s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "184,7,184,33")
                   ; !LexLayoutElement(e, lit(s))
                   <+ s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "186,7,186,8") ; id)))
    < s-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "MkLayoutCharacter", "174,0,187,4")
    + s-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "MkLayoutCharacter", "174,0,187,4")
      ; fail

  unflatten-lexical :
    appl(
      prod(
        [lex(s)]
      , cf(s)
      , no-attrs()
      )
    , [ appl(
          prod(
            syms
          , iter-star(
              char-class(
                [range(0, 255)]
              )
            )
          , no-attrs()
          )
        , xs
        )
      ]
    ) -> <r-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-lexical", "189,0,194,92")> appl(
                                                                                                                           prod(
                                                                                                                             [lex(s)]
                                                                                                                           , cf(s)
                                                                                                                           , no-attrs()
                                                                                                                           )
                                                                                                                         , xs'
                                                                                                                         )
    where r-enter(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-lexical", "189,0,194,92")
          <+ r-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-lexical", "189,0,194,92")
             ; fail
    where s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "193,7,194,92")
          ; (s-step(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "193,7,194,85")
             ; !appl(
                  prod(
                    [ lex(
                        iter-star(
                          char-class(
                            [range(0, 255)]
                          )
                        )
                      )
                    ]
                  , lex(s)
                  , no-attrs()
                  )
                , [ appl(
                      prod(
                        syms
                      , lex(
                          iter-star(
                            char-class(
                              [range(0, 255)]
                            )
                          )
                        )
                      , no-attrs()
                      )
                    , xs
                    )
                  ]
                )) => xs'
          <+ r-exit(|"_cellar/asfix-tools/src/explode-asfix2me/explode-asfix2me.str", "unflatten-lexical", "189,0,194,92")
             ; fail