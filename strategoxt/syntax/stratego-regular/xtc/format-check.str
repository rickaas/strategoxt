module format-check

imports
  org.strategoxt.imp.debuggers.stratego.runtime


imports
  libstratego-lib
  libstratego-xtc
  libstratego-rtg
  strategoxt-xtc-tools
  tool-doc
  regular-options
  regular-xtc-tools
  core-format-check-pp-aterm
  core-format-check-to-xhtml


strategies
  main-format-check =
    s-enter(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "main-format-check", "18,2,29,4")
    ; s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "19,4,29,4")
    ; xtc-io-wrap(
        s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "20,6,20,15") ; fc-options
      , s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "21,6,21,13") ; fc-usage
      , s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "22,6,22,13") ; fc-about
      , s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "23,6,23,8")
        ; ![]
      , s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "24,6,28,15")
        ; (s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "24,6,24,14") ; read-from)
        ; s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "25,8,28,15")
        ; (s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "25,8,25,26") ; select-format-check)
        ; s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "26,8,28,15")
        ; (s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "26,8,26,21")
           ; xtc-output(
               s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "26,19,26,20") ; id
             ))
        ; s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "27,8,28,15")
        ; (s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "27,8,27,20") ; get-exit-code)
        ; s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "28,8,28,15")
        ; xtc-exit
      )
    < s-exit(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "main-format-check", "18,2,29,4")
    + s-exit(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "main-format-check", "18,2,29,4")
      ; fail

  select-format-check =
    s-enter(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "select-format-check", "31,2,50,5")
    ; s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "32,4,50,5")
    ; let construct-start-nonterms =
            s-enter(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "construct-start-nonterms", "32,8,34,32")
            ; s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "33,10,34,32")
            ; (s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "33,10,33,44")
               ; (s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "33,10,33,26") ; get-start-nonterm)
               ; s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "33,29,33,44")
               ; ![ Nonterm(
                      <s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "33,40,33,41") ; id>
                    )
                  ]
               <+ s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "34,13,34,32")
                  ; ?RTG(
                       Start(
                         <s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "34,25,34,26") ; id>
                       )
                     , _
                     ))
            < s-exit(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "construct-start-nonterms", "32,8,34,32")
            + s-exit(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "construct-start-nonterms", "32,8,34,32")
              ; fail
      in
        s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "36,7,49,8")
        ; (s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "36,7,39,7")
           ; where(s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "37,9,38,48")
                   ; (s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "37,9,37,32")
                      ; rtg := <s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "37,17,37,31") ; input-to-rtg-nf>)
                   ; s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "38,9,38,48")
                   ; starts := <s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "38,20,38,43") ; construct-start-nonterms> rtg))
        ; s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "40,7,49,8")
        ; if s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "40,10,40,22") ; is-xhtml-mode then
            s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "41,8,41,39")
            ; format-check-xhtml(|rtg, starts)
          else
            s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "43,8,48,10")
            ; if s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "43,11,43,21") ; is-vis-mode then
                s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "44,10,44,44")
                ; format-check-pp-aterm(|rtg, starts)
              else
                s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "46,10,47,68")
                ; (s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "46,10,46,41")
                   ; format-check-plain(|rtg, starts))
                ; s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "47,12,47,68")
                ; if s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "47,15,47,31")
                     ; <(s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "47,16,47,25") ; get-config)> "-b" then
                    s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "47,38,47,45") ; write-to
                  else
                    s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "47,52,47,64") ; write-to-text
                  end
              end
          end
      end
    < s-exit(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "select-format-check", "31,2,50,5")
    + s-exit(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "select-format-check", "31,2,50,5")
      ; fail

  get-exit-code =
    s-enter(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "get-exit-code", "52,2,53,35")
    ; s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "53,4,53,35")
    ; (s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "53,4,53,29")
       ; <(s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "53,5,53,14") ; get-config)> "--exit-code"
       <+ s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "53,34,53,35")
          ; !0)
    < s-exit(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "get-exit-code", "52,2,53,35")
    + s-exit(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "get-exit-code", "52,2,53,35")
      ; fail


strategies
  format-check-plain(|rtg, starts) =
    s-enter(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "format-check-plain", "58,2,69,18")
    ; s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "59,4,69,18")
    ; (s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "59,4,68,4")
       ; where(s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "60,6,67,36")
               ; (s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "60,6,65,6")
                  ; if-fast-mode(
                      s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "61,8,64,8")
                      ; topdown(
                          s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "62,10,63,24")
                          ; (s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "62,10,62,28")
                             ; try(
                                 s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "62,14,62,27")
                                 ; (s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "62,14,62,22") ; is-string)
                                 ; s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "62,25,62,27")
                                 ; !""
                               ))
                          ; s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "63,10,63,24")
                          ; try(
                              s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "63,14,63,23")
                              ; (s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "63,14,63,19") ; is-int)
                              ; s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "63,22,63,23")
                              ; !0
                            )
                        )
                    ))
               ; s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "66,6,67,36")
               ; (s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "66,6,66,47")
                  ; rtg-format-check(
                      s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "66,23,66,26") ; true
                    , s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "66,29,66,32") ; true
                    | rtg
                    , starts
                    ))
               ; s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "67,6,67,36")
               ; <(s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "67,7,67,16") ; set-config)> ("--exit-code", 0))
       <+ s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "69,7,69,18")
          ; <(s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "69,8,69,15") ; xtc-exit)> 1)
    < s-exit(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "format-check-plain", "58,2,69,18")
    + s-exit(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "format-check-plain", "58,2,69,18")
      ; fail

  format-check-xhtml(|rtg, starts) =
    s-enter(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "format-check-xhtml", "71,2,74,47")
    ; s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "72,4,74,47")
    ; (s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "72,4,72,40")
       ; core-format-check-xhtml(|rtg, starts))
    ; s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "73,6,74,47")
    ; (s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "73,6,73,13") ; write-to)
    ; s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "74,6,74,47")
    ; xtc-transform(
        s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "74,20,74,32")
        ; !"pp-xml-doc"
      , s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "74,35,74,46") ; pass-verbose
      )
    < s-exit(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "format-check-xhtml", "71,2,74,47")
    + s-exit(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "format-check-xhtml", "71,2,74,47")
      ; fail

  format-check-pp-aterm(|rtg, starts) =
    s-enter(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "format-check-pp-aterm", "76,2,79,18")
    ; s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "77,4,79,18")
    ; (s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "77,4,77,43")
       ; core-format-check-pp-aterm(|rtg, starts))
    ; s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "78,6,79,18")
    ; (s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "78,6,78,13") ; write-to)
    ; s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "79,6,79,18")
    ; xtc-abox2text
    < s-exit(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "format-check-pp-aterm", "76,2,79,18")
    + s-exit(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "format-check-pp-aterm", "76,2,79,18")
      ; fail


strategies
  fc-options =
    s-enter(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "fc-options", "87,2,93,85")
    ; s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "88,9,93,85")
    ; (s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "88,9,88,55")
       ; rtg-option(|"Format check against rtg in file")
       + s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "89,6,93,85")
         ; (s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "89,6,89,66")
            ; rtg-nf-option(|"Format check against normalized rtg in file")
            + s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "90,6,93,85")
              ; (s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "90,6,90,86")
                 ; start-nonterm-option(|"Term must be of type s (default: start non-terms of rtg)")
                 + s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "91,6,93,85")
                   ; (s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "91,6,91,17") ; xhtml-option
                      + s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "92,6,93,85")
                        ; (s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "92,6,92,15") ; vis-option
                           + s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "93,6,93,85")
                             ; fast-option(|"Run as fast as possible. Might reduce quality of error messages."))))))
    < s-exit(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "fc-options", "87,2,93,85")
    + s-exit(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "fc-options", "87,2,93,85")
      ; fail

  xhtml-option =
    s-enter(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "xhtml-option", "95,2,99,4")
    ; s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "96,4,99,4")
    ; Option(
        s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "96,11,96,19") ; "--xhtml"
      , s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "97,6,97,19") ; set-xhtml-mode
      , s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "98,6,98,58")
        ; !HelpString("--xhtml", "Present the result in XHTML")
      )
    < s-exit(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "xhtml-option", "95,2,99,4")
    + s-exit(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "xhtml-option", "95,2,99,4")
      ; fail

  is-xhtml-mode =
    s-enter(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "is-xhtml-mode", "101,2,102,25")
    ; s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "102,4,102,25")
    ; <(s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "102,5,102,14") ; get-config)> "--xhtml"
    < s-exit(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "is-xhtml-mode", "101,2,102,25")
    + s-exit(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "is-xhtml-mode", "101,2,102,25")
      ; fail

  set-xhtml-mode =
    s-enter(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "set-xhtml-mode", "104,2,105,31")
    ; s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "105,4,105,31")
    ; <(s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "105,5,105,14") ; set-config)> ("--xhtml", ())
    < s-exit(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "set-xhtml-mode", "104,2,105,31")
    + s-exit(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "set-xhtml-mode", "104,2,105,31")
      ; fail

  vis-option =
    s-enter(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "vis-option", "107,2,111,4")
    ; s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "108,4,111,4")
    ; Option(
        s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "108,11,108,17") ; "--vis"
      , s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "109,6,109,17") ; set-vis-mode
      , s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "110,6,110,58")
        ; !HelpString("--vis", "Visualize in colored pp-aterm")
      )
    < s-exit(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "vis-option", "107,2,111,4")
    + s-exit(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "vis-option", "107,2,111,4")
      ; fail

  is-vis-mode =
    s-enter(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "is-vis-mode", "113,2,114,23")
    ; s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "114,4,114,23")
    ; <(s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "114,5,114,14") ; get-config)> "--vis"
    < s-exit(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "is-vis-mode", "113,2,114,23")
    + s-exit(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "is-vis-mode", "113,2,114,23")
      ; fail

  set-vis-mode =
    s-enter(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "set-vis-mode", "116,2,117,29")
    ; s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "117,4,117,29")
    ; <(s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "117,5,117,14") ; set-config)> ("--vis", ())
    < s-exit(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "set-vis-mode", "116,2,117,29")
    + s-exit(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "set-vis-mode", "116,2,117,29")
      ; fail


strategies
  fc-usage =
    s-enter(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "fc-usage", "121,2,171,4")
    ; s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "122,4,171,4")
    ; <(s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "122,5,122,12") ; tool-doc)> [ Usage("format-check --rtg file [OPTIONS]")
                                                                                                        , Summary("
format-check analyzes whether the input ATerm conforms to the format
that is specified in the RTG (Regular Tree Grammar).
	")
                                                                                                        , OptionUsage()
                                                                                                        , Description(
                                                                                                            [ "
format-check verifies that the input ATerm is part of the language
defined in the RTG.  If this is not the case, then the ATerm contains
format errors. format-check can operate in three modes: plain,
visualize and XHTML.
	"
                                                                                                            , "
The plain mode is used if the other modes are not enabled. In the
plain mode format errors are reported and no result is written the the
output (stdout or a file). Hence, if format-check is included in a
pipeline, then the following tool will probably fail. If the input
term is correct, then it is written to the output.
	"
                                                                                                            , "
The visualize mode is enabled with the --vis option. In visualize mode
format errors are reported and in a pretty-printed ATerm will be
written to the output. All innermost parts of the ATerm that cause
format errors are printed in red, if your terminal supports control
characters for colors. If you want to browse through the ATerm with
less, then you should use the -r flag.
	"
                                                                                                            , "
The XHTML mode is enabled with the --xhtml option. In XHTML mode
format errors are reported and an report in XHTML will be written to
the output. This report shows the parts of the ATerm that are not
formatted correctly. Also, moving with your mouse over the nodes of
ATerm, will show the non-terminals that have be inferred by
format-check (do not use IE6. Firefox or Mozilla is recommended).
	"
                                                                                                            , "
format-check reports all innermost format errors. That is, only the
deepest format errors are reported. A format error is reported by
showing the ATerm that is not in the correct format, and the inferred
types of the children of the ATerm. In XHTML and visualize mode a
format error of term in a list is presented by a red comma and
term. This means that a type has been inferred for the term itself,
but that it is not expected at this point in the list. If only the
term is red, then no type could be inferred for the term itself.
	"
                                                                                                            , "
In all modes format-check succeeds (exit code 0) if the ATerm contains
no format errors. If the term does contain format errors, then
format-check fails (exit code 1).
	"
                                                                                                            ]
                                                                                                          )
                                                                                                        , AutoReportBugs()
                                                                                                        ]
    < s-exit(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "fc-usage", "121,2,171,4")
    + s-exit(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "fc-usage", "121,2,171,4")
      ; fail

  fc-about =
    s-enter(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "fc-about", "173,2,183,6")
    ; s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "174,4,183,6")
    ; <(s-step(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "174,5,174,12") ; tool-doc)> [ AutoProgram()
                                                                                                        , Author(Person("Martin Bravenboer", "martin.bravenboer@gmail.com"))
                                                                                                        , GNU_LGPL("2002-2008", "Martin Bravenboer <martin.bravenboer@gmail.com>")
                                                                                                        , WebHome("http://www.program-transformation.org/Tools/FormatCheck")
                                                                                                        , Config([DefaultXTCRepository(), CurrentXTCRepository()])
                                                                                                        ]
    < s-exit(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "fc-about", "173,2,183,6")
    + s-exit(|"strategoxt/syntax/stratego-regular/xtc/format-check.str", "fc-about", "173,2,183,6")
      ; fail