<?xml version="1.0"?>
<project name="org.strategoxt.ant">
	<import file="strategoxt-contrib-util.xml" />
	<import file="dsldi-contrib.xml" />

	<!-- This will be nicer when SDF is reimplemented in Stratego -->
	<property name="sdf2bundle" value="${user.home}/.nix-profile" />
	<property name="nativepath" value="${sdf2bundle}/bin/" />

	<property name="version" value="0" />
	<property name="revision" value="0" />
	<taskdef resource="net/sf/antcontrib/antcontrib.properties" />

	<!-- Put Stratego debug runtime library on path during strj when instrumentaton is enabled -->
	<condition property="str.linkagainst.debug.runtime" value="true" else="">
		<equals arg1="true" arg2="${str.instrumentation.enabled}" />
	</condition>
        
	<macrodef name="pack-sdf">
		<attribute name="input" />
		<attribute name="output" />
		<element name="args" optional="true" />
		<element name="sdf-deps" optional="true" />
		<sequential>
			<uptodate-mio input="@{input}" output="@{output}" type="pack-sdf">
				<action>
					<java classname="run" failonerror="true">
						<arg value="org.strategoxt.tools.main-pack-sdf" />
						<arg value="-i" />
						<arg value="${basedir}/@{input}" />
						<arg value="-o" />
						<arg value="${basedir}/@{output}" />
						<args />
					</java>
				</action>
				<deps>
					<sdf-deps />
				</deps>
			</uptodate-mio>
		</sequential>
	</macrodef>

	<macrodef name="sglri">
		<attribute name="input" />
		<attribute name="output" />
		<attribute name="parsetable" />
		<element name="args" optional="true" />
		<sequential>
			<uptodate-io input="@{input}" output="@{output}" type="sglri">
				<action>
					<java classname="org.spoofax.jsglr.Main" failonerror="true">
						<arg value="-i" />
						<arg value="${basedir}/@{input}" />
						<arg value="-p" />
						<arg value="${basedir}/@{parsetable}" />
						<arg value="--implode" />
						<arg value="-o" />
						<arg value="${basedir}/@{output}" />
						<args />
					</java>
				</action>
			</uptodate-io>
		</sequential>
	</macrodef>

	<macrodef name="sdf2rtg">
		<attribute name="input" />
		<attribute name="output" />
		<attribute name="main" />
		<sequential>
			<uptodate-io input="@{input}" output="@{output}" type="sdf2rtg">
				<action>
					<java classname="run" failonerror="true">
						<arg value="org.strategoxt.tools.main-sdf2rtg" />
						<arg value="-i" />
						<arg value="${basedir}/@{input}" />
						<arg value="-m" />
						<arg value="@{main}" />
						<arg value="-o" />
						<arg value="${basedir}/@{output}" />
						<arg value="--ignore-missing-cons" />
						<arg value="-Xnativepath" />
						<arg value="${nativepath}" />
					</java>
				</action>
			</uptodate-io>
		</sequential>
	</macrodef>

	<macrodef name="rtg2sig">
		<attribute name="input" />
		<attribute name="output" />
		<attribute name="main" />
		<sequential>
			<uptodate-io input="@{input}" output="@{output}" type="rtg2sig">
				<action>
					<java classname="run" failonerror="true">
						<arg value="org.strategoxt.tools.main-rtg2sig" />
						<arg value="-i" />
						<arg value="${basedir}/@{input}" />
						<arg value="--module" />
						<arg value="@{main}" />
						<arg value="-o" />
						<arg value="${basedir}/@{output}" />
					</java>
				</action>
			</uptodate-io>
		</sequential>
	</macrodef>

	<macrodef name="sdf2table">
		<attribute name="input" />
		<attribute name="output" />
		<attribute name="main" />
		<sequential>
			<uptodate-io input="@{input}" output="@{output}" type="sdf2table">
				<action>
					<exec executable="${nativepath}/sdf2table">
						<arg value="-t" />
						<arg value="-i" />
						<arg value="@{input}" />
						<arg value="-m" />
						<arg value="@{main}" />
						<arg value="-o" />
						<arg value="@{output}" />
					</exec>
				</action>
			</uptodate-io>
		</sequential>
	</macrodef>

	<macrodef name="ppgen">
		<attribute name="input" />
		<attribute name="output" />
		<sequential>
			<uptodate-io input="@{input}" output="@{output}" type="ppgen">
				<action>
					<java classname="run" failonerror="true">
						<arg value="org.strategoxt.tools.main-ppgen" />
						<arg value="-i" />
						<arg value="${basedir}/@{input}" />
						<arg value="-t" />
						<arg value="-b" />
						<arg value="-o" />
						<arg value="${basedir}/@{output}.af" />
					</java>
					<java classname="run" failonerror="true">
						<arg value="org.strategoxt.tools.main-pp-pp-table" />
						<arg value="-i" />
						<arg value="${basedir}/@{output}.af" />
						<arg value="-o" />
						<arg value="${basedir}/@{output}" />
					</java>
				</action>
			</uptodate-io>
		</sequential>
	</macrodef>

	<macrodef name="sdf2generated">
		<attribute name="base" />
		<attribute name="main" />
		<attribute name="pp" default="true" />
		<element name="includeargs" optional="true" />
		<element name="deps" optional="true" />
		<sequential>
			<pack-sdf input="@{base}.sdf" output="@{base}.def">
				<includeargs />
				<sdf-deps>
					<deps />
				</sdf-deps>
			</pack-sdf>
			<sdf2table input="@{base}.def" output="@{base}.tbl" main="@{main}" />

			<if>
				<equals arg1="@{pp}" arg2="true" />
				<then>
					<ppgen input="@{base}.def" output="@{base}.pp" />
				</then>
			</if>

			<sdf2rtg input="@{base}.def" output="@{base}.rtg" main="@{main}" />
			<rtg2sig input="@{base}.rtg" output="@{base}.str" main="@{main}" />
		</sequential>
	</macrodef>

	<macrodef name="sdf2parenthesize">
		<attribute name="input" />
		<attribute name="output" />
		<attribute name="language" />
		<attribute name="main" />
		<attribute name="outputmodule" />
		<element name="args" optional="true" />
		<sequential>
			<uptodate-io input="@{input}" output="@{output}" type="sdf2parenthesize">
				<action>
					<java classname="run" failonerror="true">
						<arg value="org.strategoxt.tools.main-sdf2parenthesize" />
						<arg value="-i" />
						<arg value="${basedir}/@{input}" />
						<arg value="-m" />
						<arg value="@{main}" />
						<arg value="--lang" />
						<arg value="@{language}" />
						<arg value="--omod" />
						<arg value="@{outputmodule}" />
						<arg value="-o" />
						<arg value="${basedir}/@{output}" />
						<args />
					</java>
				</action>
			</uptodate-io>
		</sequential>
	</macrodef>

	<macrodef name="gen-sdf-mix">
		<attribute name="input" />
		<attribute name="output" />
		<attribute name="main" />
		<attribute name="name" />
		<sequential>
			<uptodate-io input="@{input}" output="@{output}" type="gen-sdf-mix">
				<action>
					<java classname="run" failonerror="true">
						<arg value="org.strategoxt.tools.main-gen-sdf-mix" />
						<arg value="-i" />
						<arg value="${basedir}/@{input}" />
						<arg value="--main" />
						<arg value="@{main}" />
						<arg value="--name" />
						<arg value="@{name}" />
						<arg value="-o" />
						<arg value="${basedir}/@{output}" />
						<arg value="-Xnativepath" />
						<arg value="${nativepath}" />
					</java>
				</action>
			</uptodate-io>
		</sequential>
	</macrodef>

	<macrodef name="strj">
		<attribute name="input" />
		<attribute name="output" />
		<attribute name="package" />
		<element name="strjargs" optional="true" />
		<element name="str-deps" optional="true" />
		<sequential>
			<property name="@{input}.abs" location="@{input}" />
			<property name="@{output}.abs" location="@{output}" />
			<uptodate-mio input="@{input}" output="@{output}" type="strj">
				<action>
					<if>
						<equals arg1="${str.linkagainst.debug.runtime}" arg2="true" />
						<then>
							<!-- put the stratego library on the path -->
							<property name="strj.java.args" value="-I ${stratego.spoofax.debug.library.base} -la org.strategoxt.imp.debuggers.stratego.runtime.strategies"/>
						</then>
					</if>
					<property name="strj.java.args" value=""/> <!-- if the property is already set; setting it again has no effect -->
					<java classname="org.strategoxt.strj.Main" failonerror="true">
						<arg value="-i" />
						<arg value="${@{input}.abs}" />
						<arg value="-o" />
						<arg value="${@{output}.abs}" />
						<arg value="-p" />
						<arg value="@{package}" />
						<arg value="-D" />
						<arg value="VERSION_TERM=&quot;${version}&quot;" />
						<arg value="-D" />
						<arg value="SVN_REVISION_TERM=&quot;${revision}&quot;" />
						<arg line="${strj.java.args}" />
						<strjargs />
					</java>
				</action>
				<deps>
					<str-deps />
				</deps>
			</uptodate-mio>
		</sequential>
	</macrodef>

	<macrodef name="strj-lib">
		<attribute name="input" />
		<attribute name="output" />
		<attribute name="package" />
		<element name="strjlibargs" optional="true" />
		<element name="str-deps" optional="true" />
		<sequential>
			<dirname file="@{input}" property="@{input}.dirname" />
			<basename file="@{input}" property="@{input}.basename" suffix=".str" />
			<uptodate-mio input="@{input}" output="@{output}" type="strj-lib">
				<action>
					<strj input="@{input}" output="${@{input}.dirname}/lib${@{input}.basename}.ctree" package="@{package}">
						<strjargs>
							<arg value="--library" />
							<arg value="-F" />
							<strjlibargs />
						</strjargs>
					</strj>
					<strj input="${@{input}.dirname}/lib${@{input}.basename}.ctree" output="@{output}" package="@{package}">
						<strjargs>
							<arg value="--library" />
							<strjlibargs />
						</strjargs>
					</strj>
				</action>
				<deps>

					<str-deps />
				</deps>
			</uptodate-mio>
		</sequential>
	</macrodef>

	<macrodef name="gen-renamed-sdf-module">
		<attribute name="input" />
		<attribute name="output" />
		<attribute name="main" />
		<attribute name="name" />
		<attribute name="prefix" />
		<sequential>
			<uptodate-io input="@{input}" output="@{output}" type="gen-renamed-sdf-module">
				<action>
					<java classname="run" failonerror="true">
						<arg value="org.strategoxt.tools.main-gen-renamed-sdf-module" />
						<arg value="-i" />
						<arg value="${basedir}/@{input}" />
						<arg value="--main" />
						<arg value="@{main}" />
						<arg value="--name" />
						<arg value="@{name}" />
						<arg value="--prefix" />
						<arg value="@{prefix}" />
						<arg value="-o" />
						<arg value="${basedir}/@{output}" />
						<arg value="-Xnativepath" />
						<arg value="${nativepath}" />
					</java>
				</action>
			</uptodate-io>
		</sequential>
	</macrodef>

</project>
