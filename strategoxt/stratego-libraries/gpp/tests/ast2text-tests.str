module ast2text-tests

imports
  org.strategoxt.imp.debuggers.stratego.runtime


imports
  libstratego-sglr
  libstratego-gpp
  libstratego-xtc
  libstratego-lib


strategies
  main-ast2text-tests =
    s-enter(
    | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
    , "main-ast2text-tests"
    , "13"
    , "2"
    , "18"
    , "4"
    )
    ; s-step(
      | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
      , "14"
      , "4"
      , "18"
      , "4"
      )
    ; test-suite(
        s-step(
        | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
        , "14"
        , "15"
        , "14"
        , "31"
        )
        ; !"ast2text-tests"
      , s-step(
        | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
        , "15"
        , "6"
        , "17"
        , "6"
        )
        ; xtc-temp-files(
            s-step(
            | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
            , "16"
            , "8"
            , "16"
            , "21"
            )
            ; selector-tests
          )
      )
    < s-exit(
      | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
      , "main-ast2text-tests"
      , "13"
      , "2"
      , "18"
      , "4"
      )
    + s-exit(
      | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
      , "main-ast2text-tests"
      , "13"
      , "2"
      , "18"
      , "4"
      )
      ; fail


strategies
  selector-tests =
    s-enter(
    | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
    , "selector-tests"
    , "22"
    , "2"
    , "61"
    , "6"
    )
    ; s-step(
      | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
      , "23"
      , "6"
      , "61"
      , "6"
      )
    ; (s-step(
       | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
       , "23"
       , "6"
       , "26"
       , "6"
       )
       ; ast2text-test(
         | "tuples 1"
         , "Foo.pp"
         , Foo(
             ((1, 2), 3)
           )
         , "a(b(1 2) 3)"
         ))
    ; s-step(
      | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
      , "28"
      , "6"
      , "61"
      , "6"
      )
    ; (s-step(
       | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
       , "28"
       , "6"
       , "31"
       , "6"
       )
       ; ast2text-test(
         | "tuples 2"
         , "Bar.pp"
         , Bar([(), (), ()])
         , "bar(tuple |tuple |tuple)"
         ))
    ; s-step(
      | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
      , "33"
      , "6"
      , "61"
      , "6"
      )
    ; (s-step(
       | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
       , "33"
       , "6"
       , "36"
       , "6"
       )
       ; ast2text-test(
         | "tuples 3"
         , "Bar2.pp"
         , Bar(
             [ (1, 2)
             , (3, 4)
             , (5, 6)
             ]
           )
         , "bar(1 2|3 4|5 6)"
         ))
    ; s-step(
      | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
      , "38"
      , "6"
      , "61"
      , "6"
      )
    ; (s-step(
       | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
       , "38"
       , "6"
       , "41"
       , "6"
       )
       ; ast2text-test(
         | "tuples 4"
         , "DataType.pp"
         , DataType(
             "list"
           , [ ("cons", [1, 2])
             , ("nil", [])
             ]
           )
         , "data list = cons 1 2 | nil"
         ))
    ; s-step(
      | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
      , "43"
      , "6"
      , "61"
      , "6"
      )
    ; (s-step(
       | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
       , "43"
       , "6"
       , "46"
       , "6"
       )
       ; ast2text-test(
         | "alt 1"
         , "Alt.pp"
         , Foo(alt(1, []))
         , "one"
         ))
    ; s-step(
      | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
      , "48"
      , "6"
      , "61"
      , "6"
      )
    ; (s-step(
       | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
       , "48"
       , "6"
       , "51"
       , "6"
       )
       ; ast2text-test(
         | "alt 2"
         , "Alt.pp"
         , Foo(alt(2, []))
         , "two"
         ))
    ; s-step(
      | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
      , "53"
      , "6"
      , "61"
      , "6"
      )
    ; (s-step(
       | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
       , "53"
       , "6"
       , "56"
       , "6"
       )
       ; ast2text-test(
         | "alt 3"
         , "Alt.pp"
         , Foo(
             alt(
               3
             , [Some(Fred())]
             )
           )
         , "three"
         ))
    ; s-step(
      | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
      , "58"
      , "6"
      , "61"
      , "6"
      )
    ; ast2text-test(
      | "alt 3"
      , "Alt.pp"
      , Foo(
          alt(3, [None()])
        )
      , ""
      )
    < s-exit(
      | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
      , "selector-tests"
      , "22"
      , "2"
      , "61"
      , "6"
      )
    + s-exit(
      | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
      , "selector-tests"
      , "22"
      , "2"
      , "61"
      , "6"
      )
      ; fail


strategies
  ast2text-test(|msg, pp, term, string) =
    s-enter(
    | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
    , "ast2text-test"
    , "65"
    , "2"
    , "72"
    , "4"
    )
    ; s-step(
      | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
      , "66"
      , "4"
      , "72"
      , "4"
      )
    ; apply-test(
        s-step(
        | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
        , "66"
        , "15"
        , "66"
        , "18"
        )
        ; !msg
      , s-step(
        | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
        , "67"
        , "6"
        , "69"
        , "27"
        )
        ; (s-step(
           | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
           , "67"
           , "6"
           , "67"
           , "44"
           )
           ; where(s-step(
                   | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
                   , "67"
                   , "12"
                   , "67"
                   , "43"
                   )
                   ; pptbl := <s-step(
                               | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
                               , "67"
                               , "22"
                               , "67"
                               , "39"
                               )
                               ; parse-pptable-file> pp))
        ; s-step(
          | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
          , "68"
          , "8"
          , "69"
          , "27"
          )
        ; (s-step(
           | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
           , "68"
           , "8"
           , "68"
           , "24"
           )
           ; ast2box(|[pptbl]))
        ; s-step(
          | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
          , "69"
          , "8"
          , "69"
          , "27"
          )
        ; box2text-string(|80)
      , s-step(
        | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
        , "70"
        , "6"
        , "70"
        , "10"
        )
        ; !term
      , s-step(
        | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
        , "71"
        , "6"
        , "71"
        , "12"
        )
        ; !string
      )
    < s-exit(
      | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
      , "ast2text-test"
      , "65"
      , "2"
      , "72"
      , "4"
      )
    + s-exit(
      | "strategoxt/stratego-libraries/gpp/tests/ast2text-tests.str"
      , "ast2text-test"
      , "65"
      , "2"
      , "72"
      , "4"
      )
      ; fail


signature
  constructors
    Foo      : a -> b
    Bar      : a -> b
    DataType : a * b -> c
    Fred     : c