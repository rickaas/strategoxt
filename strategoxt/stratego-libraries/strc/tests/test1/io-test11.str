module io-test11

imports
  org.strategoxt.imp.debuggers.stratego.runtime


imports
  libstratego-lib


signature
  constructors
    Zero : Nat
    Succ : Nat -> Nat
    Plus : Nat * Nat -> Nat


rules

  A :
    Plus(Zero, x) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "A", "11,2,11,23")> x
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "A", "11,2,11,23")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "A", "11,2,11,23")
             ; fail

  B :
    Plus(Succ(x), y) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "B", "12,2,12,41")> Succ(Plus(x, y))
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "B", "12,2,12,41")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "B", "12,2,12,41")
             ; fail


strategies
  my-try(s) =
    s-enter(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "my-try", "16,2,16,20")
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "16,14,16,20")
    ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "16,14,16,14") ; s
       <+ s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "16,19,16,20") ; id)
    < s-exit(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "my-try", "16,2,16,20")
    + s-exit(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "my-try", "16,2,16,20")
      ; fail

  my-repeat(s) =
    s-enter(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "my-repeat", "18,2,18,35")
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "18,17,18,35")
    ; rec x (
        s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "18,23,18,34")
        ; my-try(
            s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "18,30,18,33")
            ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "18,30,18,30") ; s)
            ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "18,33,18,33")
            ; x
          )
      )
    < s-exit(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "my-repeat", "18,2,18,35")
    + s-exit(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "my-repeat", "18,2,18,35")
      ; fail

  my-topdown(s) =
    s-enter(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "my-topdown", "19,2,19,33")
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "19,18,19,33")
    ; rec x (
        s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "19,24,19,32")
        ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "19,24,19,24") ; s)
        ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "19,27,19,32")
        ; all(s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "19,31,19,31") ; x)
      )
    < s-exit(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "my-topdown", "19,2,19,33")
    + s-exit(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "my-topdown", "19,2,19,33")
      ; fail

  my-bottomup(s) =
    s-enter(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "my-bottomup", "20,2,20,34")
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "20,19,20,34")
    ; rec x (
        s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "20,25,20,33")
        ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "20,25,20,30")
           ; all(s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "20,29,20,29") ; x))
        ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "20,33,20,33")
        ; s
      )
    < s-exit(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "my-bottomup", "20,2,20,34")
    + s-exit(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "my-bottomup", "20,2,20,34")
      ; fail

  my-downup(s) =
    s-enter(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "my-downup", "21,2,21,35")
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "21,17,21,35")
    ; rec x (
        s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "21,23,21,34")
        ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "21,23,21,23") ; s)
        ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "21,26,21,34")
        ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "21,26,21,31")
           ; all(s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "21,30,21,30") ; x))
        ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "21,34,21,34")
        ; s
      )
    < s-exit(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "my-downup", "21,2,21,35")
    + s-exit(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "my-downup", "21,2,21,35")
      ; fail

  my-downup(s1, s2) =
    s-enter(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "my-downup", "22,2,22,41")
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "22,21,22,41")
    ; rec x (
        s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "22,27,22,40")
        ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "22,27,22,28") ; s1)
        ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "22,31,22,40")
        ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "22,31,22,36")
           ; all(s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "22,35,22,35") ; x))
        ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "22,39,22,40")
        ; s2
      )
    < s-exit(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "my-downup", "22,2,22,41")
    + s-exit(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "my-downup", "22,2,22,41")
      ; fail

  my-innermost(s) =
    s-enter(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "my-innermost", "23,2,23,64")
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "23,20,23,64")
    ; rec x (
        s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "23,26,23,63")
        ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "23,26,23,31")
           ; all(s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "23,30,23,30") ; x))
        ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "23,34,23,63")
        ; rec y (
            s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "23,40,23,62")
            ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "23,40,23,56")
               ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "23,40,23,40") ; s)
               ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "23,43,23,56")
               ; my-bottomup(
                   s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "23,55,23,55") ; y
                 )
               <+ s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "23,61,23,62") ; id)
          )
      )
    < s-exit(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "my-innermost", "23,2,23,64")
    + s-exit(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "my-innermost", "23,2,23,64")
      ; fail

  eval =
    s-enter(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "eval", "25,2,26,22")
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "26,4,26,22")
    ; my-innermost(
        s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "26,17,26,21")
        ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "26,17,26,17") ; A
           + s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "26,21,26,21") ; B)
      )
    < s-exit(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "eval", "25,2,26,22")
    + s-exit(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "eval", "25,2,26,22")
      ; fail

  main =
    s-enter(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "main", "28,2,30,18")
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "29,4,30,18")
    ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "29,4,29,62")
       ; <(s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "29,5,29,8") ; conc)> ( <s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "29,12,29,13") ; id>
                                                                                                         , ["-i", "io-test11.in", "-o", "io-test11.out"]
                                                                                                         ))
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "30,6,30,18")
    ; io-wrap(
        s-step(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "30,14,30,17") ; eval
      )
    < s-exit(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "main", "28,2,30,18")
    + s-exit(|"strategoxt/stratego-libraries/strc/tests/test1/io-test11.str", "main", "28,2,30,18")
      ; fail