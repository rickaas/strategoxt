module test60

imports
  org.strategoxt.imp.debuggers.stratego.runtime


imports
  libstratego-lib


strategies
  main =
    s-enter(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "main", "5,2,12,25")
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "6,4,12,25")
    ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "6,4,12,6")
       ; {|CSE:
            s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "7,7,11,34")
            ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "7,7,7,21")
               ; new-A(|"a", "a"))
            ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "8,7,11,34")
            ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "8,7,8,39")
               ; where(s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "8,13,8,38")
                       ; <(s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "8,14,8,19") ; Assign)> ("a", ("b", "c"))))
            ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "9,7,11,34")
            ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "9,7,9,20")
               ; <(s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "9,8,9,8") ; A)> ("b", "c"))
            ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "10,7,11,34")
            ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "10,7,10,22")
               ; undefine-A(|"b"))
            ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "11,7,11,34")
            ; !( <s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "11,10,11,11") ; id>
               , <s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "11,16,11,21")
                  ; try(
                      s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "11,20,11,20") ; A
                    )> ("b", "c")
               )
         |}) => ("a", ("b", "c"))
    < s-exit(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "main", "5,2,12,25")
    + s-exit(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "main", "5,2,12,25")
      ; fail

  innermost-scope-A =
    s-enter(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "innermost-scope-A", "14,2,16,48")
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "15,4,16,48")
    ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "15,4,15,28")
       ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "15,4,15,21")
          ; collect(
              s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "15,12,15,20") ; is-string
            )) => ids)
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "16,6,16,48")
    ; innermost-scope-A(
        s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "16,24,16,47")
        ; where(s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "16,30,16,46")
                ; <(s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "16,31,16,34") ; elem)> ( <s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "16,38,16,39") ; id>
                                                                                                                 , ids
                                                                                                                 ))
      )
    < s-exit(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "innermost-scope-A", "14,2,16,48")
    + s-exit(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "innermost-scope-A", "14,2,16,48")
      ; fail

  Assign =
    s-enter(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "Assign", "18,2,22,40")
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "19,4,22,40")
    ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "19,4,19,11")
       ; ?(x, e))
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "20,6,22,40")
    ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "20,6,20,51")
       ; where(s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "20,13,20,49")
               ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "20,13,20,43")
                  ; collect(
                      s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "20,21,20,42")
                      ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "20,21,20,29") ; is-string)
                      ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "20,32,20,42")
                      ; !( "a"
                         , <s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "20,39,20,40") ; id>
                         )
                    )) => xs))
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "21,6,22,40")
    ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "21,6,21,36")
       ; where(s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "21,13,21,34")
               ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "21,13,21,29") ; innermost-scope-A) => z))
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "22,6,22,40")
    ; rules ( A.z : e -> x depends on xs )
    < s-exit(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "Assign", "18,2,22,40")
    + s-exit(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "Assign", "18,2,22,40")
      ; fail

  assign-aux =
    s-enter(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "assign-aux", "24,2,28,50")
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "25,4,28,50")
    ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "25,4,25,11")
       ; ?(x, e))
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "26,6,28,50")
    ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "26,6,26,51")
       ; where(s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "26,13,26,49")
               ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "26,13,26,43")
                  ; collect(
                      s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "26,21,26,42")
                      ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "26,21,26,29") ; is-string)
                      ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "26,32,26,42")
                      ; !( "a"
                         , <s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "26,39,26,40") ; id>
                         )
                    )) => xs))
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "27,6,28,50")
    ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "27,6,27,36")
       ; where(s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "27,13,27,34")
               ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "27,13,27,29") ; innermost-scope-B) => z))
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "28,6,28,50")
    ; rules (
        B.z :
          (e, y) -> (x, y)
          depends on xs
      )
    < s-exit(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "assign-aux", "24,2,28,50")
    + s-exit(|"strategoxt/stratego-libraries/strc/tests/test1/test60.str", "assign-aux", "24,2,28,50")
      ; fail