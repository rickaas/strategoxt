module occan

imports
  org.strategoxt.imp.debuggers.stratego.runtime


imports
  libstratego-lib


signature
  sorts
    Exp

  constructors
         : String -> Var
    Var  : Var -> Exp
    Lam  : Var * Exp -> Exp
    App  : Exp * Exp -> Exp
    Case : Exp * List(Alt) -> Exp
    Let  : Var * Exp * Exp -> Exp
    Alt  : Exp -> Exp
    Skip : Exp


signature
  sorts
    Occ

  constructors
    Dead       : Occ
    Once       : Occ
    OnceInLam  : Occ
    ManyBranch : Occ
    Many       : Occ


strategies
  main =
    s-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "main", "32,2,43,4")
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "33,4,43,4")
    ; test-suite(
        s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "33,15,33,22")
        ; !"occan"
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "33,25,42,23")
        ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "33,25,33,26") ; id)
        ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "34,9,42,23")
        ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "34,9,34,17") ; test-dead)
        ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "35,3,42,23")
        ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "35,3,35,11") ; test-once)
        ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "36,9,42,23")
        ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "36,9,36,17") ; test-many)
        ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "37,9,42,23")
        ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "37,9,37,25") ; test-once-in-case)
        ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "38,9,42,23")
        ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "38,9,38,18") ; test-manyb)
        ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "39,10,42,23")
        ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "39,10,39,24") ; test-manyb-once)
        ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "40,10,42,23")
        ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "40,10,40,23") ; test-many-case)
        ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "41,5,42,23")
        ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "41,5,41,14") ; test-oncel)
        ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "42,5,42,23")
        ; test-once-in-lambda
      )
    < s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "main", "32,2,43,4")
    + s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "main", "32,2,43,4")
      ; fail

  test-dead =
    s-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "test-dead", "45,2,50,4")
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "46,4,50,4")
    ; apply-test(
        s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "46,15,46,26")
        ; !"test-dead"
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "47,3,47,11") ; occan-exp
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "48,3,48,27")
        ; !Let("a", Skip(), Skip())
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "49,3,49,35")
        ; !Let(
             "a"{Dead()}
           , Skip()
           , Skip()
           )
      )
    < s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "test-dead", "45,2,50,4")
    + s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "test-dead", "45,2,50,4")
      ; fail

  test-once =
    s-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "test-once", "51,2,56,4")
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "52,4,56,4")
    ; apply-test(
        s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "52,15,52,26")
        ; !"test-once"
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "53,3,53,11") ; occan-exp
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "54,3,54,29")
        ; !Let(
             "a"
           , Skip()
           , Var("a")
           )
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "55,3,55,37")
        ; !Let(
             "a"{Once()}
           , Skip()
           , Var("a")
           )
      )
    < s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "test-once", "51,2,56,4")
    + s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "test-once", "51,2,56,4")
      ; fail

  test-many =
    s-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "test-many", "58,2,63,4")
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "59,4,63,4")
    ; apply-test(
        s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "59,15,59,26")
        ; !"test-many"
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "60,3,60,11") ; occan-exp
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "61,3,61,44")
        ; !Let(
             "a"
           , Skip()
           , App(
               Var("a")
             , Var("a")
             )
           )
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "62,3,62,52")
        ; !Let(
             "a"{Many()}
           , Skip()
           , App(
               Var("a")
             , Var("a")
             )
           )
      )
    < s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "test-many", "58,2,63,4")
    + s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "test-many", "58,2,63,4")
      ; fail

  test-once-in-case =
    s-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "test-once-in-case", "66,2,71,4")
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "67,4,71,4")
    ; apply-test(
        s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "67,15,67,34")
        ; !"test-once-in-case"
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "68,3,68,11") ; occan-exp
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "69,3,69,50")
        ; !Let(
             "a"
           , Skip()
           , Case(
               Skip()
             , [Alt(Var("a"))]
             )
           )
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "70,3,70,58")
        ; !Let(
             "a"{Once()}
           , Skip()
           , Case(
               Skip()
             , [Alt(Var("a"))]
             )
           )
      )
    < s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "test-once-in-case", "66,2,71,4")
    + s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "test-once-in-case", "66,2,71,4")
      ; fail

  test-many-case =
    s-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "test-many-case", "73,2,78,4")
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "74,4,78,4")
    ; apply-test(
        s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "74,15,74,31")
        ; !"test-many-case"
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "75,3,75,11") ; occan-exp
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "76,3,76,65")
        ; !Let(
             "a"
           , Skip()
           , App(
               Case(
                 Skip()
               , [Alt(Var("a"))]
               )
             , Var("a")
             )
           )
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "77,3,77,71")
        ; !Let(
             "a"{Many}
           , Skip()
           , App(
               Case(
                 Skip()
               , [Alt(Var("a"))]
               )
             , Var("a")
             )
           )
      )
    < s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "test-many-case", "73,2,78,4")
    + s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "test-many-case", "73,2,78,4")
      ; fail

  test-nested-case =
    s-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "test-nested-case", "80,2,87,4")
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "81,4,87,4")
    ; apply-test(
        s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "81,15,81,33")
        ; !"test-nested-case"
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "82,3,82,11") ; occan-exp
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "83,3,84,78")
        ; !Let(
             "a"
           , Skip()
           , Case(
               Skip()
             , [ Alt(
                   Case(
                     Skip()
                   , [Alt(Var("a"))]
                   )
                 )
               , Alt(Var("a"))
               ]
             )
           )
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "85,3,86,78")
        ; !Let(
             "a"{ManyBranch}
           , Skip()
           , Case(
               Skip()
             , [ Alt(
                   Case(
                     Skip()
                   , [Alt(Var("a"))]
                   )
                 )
               , Alt(Var("a"))
               ]
             )
           )
      )
    < s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "test-nested-case", "80,2,87,4")
    + s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "test-nested-case", "80,2,87,4")
      ; fail

  test-manyb =
    s-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "test-manyb", "89,2,94,4")
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "90,4,94,4")
    ; apply-test(
        s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "90,15,90,27")
        ; !"test-manyb"
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "91,3,91,11") ; occan-exp
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "92,3,92,65")
        ; !Let(
             "a"
           , Skip()
           , Case(
               Skip()
             , [ Alt(Var("a"))
               , Alt(Var("a"))
               ]
             )
           )
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "93,3,93,79")
        ; !Let(
             "a"{ManyBranch()}
           , Skip()
           , Case(
               Skip()
             , [ Alt(Var("a"))
               , Alt(Var("a"))
               ]
             )
           )
      )
    < s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "test-manyb", "89,2,94,4")
    + s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "test-manyb", "89,2,94,4")
      ; fail

  test-manyb-once =
    s-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "test-manyb-once", "96,2,105,4")
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "97,4,105,4")
    ; apply-test(
        s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "97,15,97,32")
        ; !"test-manyb-once"
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "98,3,98,11") ; occan-exp
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "99,3,101,74")
        ; !Let(
             "a"
           , Skip()
           , Let(
               "b"
             , Skip()
             , Case(
                 Skip()
               , [ Alt(Var("a"))
                 , Alt(
                     App(
                       Var("b")
                     , Var("a")
                     )
                   )
                 ]
               )
             )
           )
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "102,3,104,74")
        ; !Let(
             "a"{ManyBranch}
           , Skip()
           , Let(
               "b"{Once}
             , Skip()
             , Case(
                 Skip()
               , [ Alt(Var("a"))
                 , Alt(
                     App(
                       Var("b")
                     , Var("a")
                     )
                   )
                 ]
               )
             )
           )
      )
    < s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "test-manyb-once", "96,2,105,4")
    + s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "test-manyb-once", "96,2,105,4")
      ; fail

  test-oncel =
    s-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "test-oncel", "107,2,112,4")
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "108,4,112,4")
    ; apply-test(
        s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "108,15,108,27")
        ; !"test-oncel"
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "109,3,109,11") ; occan-exp
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "110,3,110,39")
        ; !Let(
             "a"
           , Skip()
           , Lam("b", Var("a"))
           )
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "111,3,111,60")
        ; !Let(
             "a"{OnceInLam()}
           , Skip()
           , Lam(
               "b"{Dead()}
             , Var("a")
             )
           )
      )
    < s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "test-oncel", "107,2,112,4")
    + s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "test-oncel", "107,2,112,4")
      ; fail

  test-once-in-lambda =
    s-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "test-once-in-lambda", "114,2,119,4")
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "115,4,119,4")
    ; apply-test(
        s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "115,15,115,22")
        ; !"test1"
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "116,3,116,11") ; occan-exp
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "117,3,117,21")
        ; !Lam("a", Var("a"))
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "118,3,118,29")
        ; !Lam(
             "a"{Once()}
           , Var("a")
           )
      )
    < s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "test-once-in-lambda", "114,2,119,4")
    + s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "test-once-in-lambda", "114,2,119,4")
      ; fail


rules

  inc-occ :
    (Dead, 0) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "inc-occ", "125,2,125,34")> Once
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "inc-occ", "125,2,125,34")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "inc-occ", "125,2,125,34")
             ; fail

  inc-occ :
    (Dead, i) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "inc-occ", "126,2,126,56")> OnceInLam
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "inc-occ", "126,2,126,56")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "inc-occ", "126,2,126,56")
             ; fail
    where s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "126,47,126,56")
          ; <(s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "126,48,126,49") ; gt)> (i, 0)
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "inc-occ", "126,2,126,56")
             ; fail

  inc-occ :
    (Once, _) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "inc-occ", "127,2,127,34")> Many
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "inc-occ", "127,2,127,34")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "inc-occ", "127,2,127,34")
             ; fail

  inc-occ :
    (ManyBranch, _) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "inc-occ", "128,2,128,34")> Many
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "inc-occ", "128,2,128,34")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "inc-occ", "128,2,128,34")
             ; fail

  inc-occ :
    (OnceInLam, _) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "inc-occ", "129,2,129,34")> Many
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "inc-occ", "129,2,129,34")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "inc-occ", "129,2,129,34")
             ; fail

  inc-occ :
    (Many, _) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "inc-occ", "130,2,130,34")> Many
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "inc-occ", "130,2,130,34")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "inc-occ", "130,2,130,34")
             ; fail

  merge-occ :
    (Dead, Dead) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "132,2,132,39")> Dead
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "132,2,132,39")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "132,2,132,39")
             ; fail

  merge-occ :
    (Dead, Once) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "133,2,133,39")> Once
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "133,2,133,39")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "133,2,133,39")
             ; fail

  merge-occ :
    (Dead, OnceInLam) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "134,2,134,44")> OnceInLam
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "134,2,134,44")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "134,2,134,44")
             ; fail

  merge-occ :
    (Dead, ManyBranch) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "135,2,135,45")> ManyBranch
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "135,2,135,45")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "135,2,135,45")
             ; fail

  merge-occ :
    (Dead, Many) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "136,2,136,39")> Many
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "136,2,136,39")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "136,2,136,39")
             ; fail

  merge-occ :
    (Once, Dead) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "138,2,138,39")> Once
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "138,2,138,39")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "138,2,138,39")
             ; fail

  merge-occ :
    (Once, Once) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "139,2,139,45")> ManyBranch
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "139,2,139,45")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "139,2,139,45")
             ; fail

  merge-occ :
    (Once, OnceInLam) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "140,2,140,39")> Many
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "140,2,140,39")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "140,2,140,39")
             ; fail

  merge-occ :
    (Once, ManyBranch) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "141,2,141,45")> ManyBranch
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "141,2,141,45")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "141,2,141,45")
             ; fail

  merge-occ :
    (Once, Many) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "142,2,142,39")> Many
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "142,2,142,39")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "142,2,142,39")
             ; fail

  merge-occ :
    (OnceInLam, Dead) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "144,2,144,49")> OnceInLam
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "144,2,144,49")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "144,2,144,49")
             ; fail

  merge-occ :
    (OnceInLam, Once) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "145,2,145,44")> Many
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "145,2,145,44")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "145,2,145,44")
             ; fail

  merge-occ :
    (OnceInLam, OnceInLam) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "146,2,146,44")> Many
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "146,2,146,44")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "146,2,146,44")
             ; fail

  merge-occ :
    (OnceInLam, ManyBranch) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "147,2,147,44")> Many
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "147,2,147,44")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "147,2,147,44")
             ; fail

  merge-occ :
    (OnceInLam, Many) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "148,2,148,44")> Many
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "148,2,148,44")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "148,2,148,44")
             ; fail

  merge-occ :
    (ManyBranch, Dead) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "150,2,150,51")> ManyBranch
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "150,2,150,51")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "150,2,150,51")
             ; fail

  merge-occ :
    (ManyBranch, Once) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "151,2,151,51")> ManyBranch
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "151,2,151,51")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "151,2,151,51")
             ; fail

  merge-occ :
    (ManyBranch, OnceInLam) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "152,2,152,45")> Many
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "152,2,152,45")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "152,2,152,45")
             ; fail

  merge-occ :
    (ManyBranch, Many) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "153,2,153,45")> Many
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "153,2,153,45")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "153,2,153,45")
             ; fail

  merge-occ :
    (ManyBranch, ManyBranch) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "154,2,154,51")> ManyBranch
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "154,2,154,51")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "154,2,154,51")
             ; fail

  merge-occ :
    (Many, Dead) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "156,2,156,39")> Many
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "156,2,156,39")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "156,2,156,39")
             ; fail

  merge-occ :
    (Many, Once) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "157,2,157,39")> Many
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "157,2,157,39")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "157,2,157,39")
             ; fail

  merge-occ :
    (Many, OnceInLam) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "158,2,158,39")> Many
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "158,2,158,39")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "158,2,158,39")
             ; fail

  merge-occ :
    (Many, ManyBranch) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "159,2,159,39")> Many
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "159,2,159,39")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "159,2,159,39")
             ; fail

  merge-occ :
    (Many, Many) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "160,2,160,39")> Many
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "160,2,160,39")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-occ", "160,2,160,39")
             ; fail


strategies
  occan-exp =
    s-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "occan-exp", "164,2,168,6")
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "165,4,168,6")
    ; {|LamLevel:
         s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "166,7,167,11")
         ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "166,7,166,33")
            ; rules ( LamLevel :
                        () -> 0 ))
         ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "167,7,167,11")
         ; occan
      |}
    < s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "occan-exp", "164,2,168,6")
    + s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "occan-exp", "164,2,168,6")
      ; fail

  occan =
    s-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "occan", "170,2,175,16")
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "171,4,175,16")
    ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "171,4,171,12") ; occan-let
       <+ s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "172,7,175,16")
          ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "172,7,172,15") ; occan-var
             <+ s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "173,7,175,16")
                ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "173,7,173,15") ; occan-lam
                   <+ s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "174,7,175,16")
                      ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "174,7,174,16") ; occan-case
                         <+ s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "175,7,175,16")
                            ; all(s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "175,11,175,15") ; occan)))))
    < s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "occan", "170,2,175,16")
    + s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "occan", "170,2,175,16")
      ; fail

  occan-lam :
    Lam(x, e1) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "occan-lam", "177,2,188,5")> Lam(x{o}, e2)
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "occan-lam", "177,2,188,5")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "occan-lam", "177,2,188,5")
             ; fail
    where s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "179,10,188,5")
          ; {|Occ, LamLevel:
               s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "180,13,187,17")
               ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "180,13,180,25")
                  ; <(s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "180,14,180,21") ; LamLevel)> ())
               ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "180,28,187,17")
               ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "180,28,180,35")
                  ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "180,28,180,30") ; inc) => l)
               ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "181,13,187,17")
               ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "181,13,185,13")
                  ; rules (
                      Occ+x :
                        x -> Dead()
                      LamLevel :
                        x -> l
                      LamLevel :
                        () -> l
                    ))
               ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "186,6,187,17")
               ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "186,6,186,21")
                  ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "186,6,186,15")
                     ; <(s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "186,7,186,11") ; occan)> e1) => e2)
               ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "187,6,187,17")
               ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "187,6,187,12")
                  ; <(s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "187,7,187,9") ; Occ)> x) => o
            |}
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "occan-lam", "177,2,188,5")
             ; fail

  occan-let :
    Let(x, e1, e2) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "occan-let", "190,2,201,5")> Let(x{o}, e3, e4)
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "occan-let", "190,2,201,5")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "occan-let", "190,2,201,5")
             ; fail
    where s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "192,10,201,5")
          ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "192,10,192,25")
             ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "192,10,192,19")
                ; <(s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "192,11,192,15") ; occan)> e1) => e3)
          ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "193,3,201,5")
          ; {|Occ:
               s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "194,13,200,17")
               ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "194,13,194,29")
                  ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "194,13,194,24")
                     ; <(s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "194,14,194,21") ; LamLevel)> ()) => l)
               ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "195,6,200,17")
               ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "195,6,198,13")
                  ; rules (
                      Occ+x :
                        x -> Dead
                      LamLevel :
                        x -> l
                    ))
               ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "199,6,200,17")
               ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "199,6,199,21")
                  ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "199,6,199,15")
                     ; <(s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "199,7,199,11") ; occan)> e2) => e4)
               ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "200,6,200,17")
               ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "200,6,200,12")
                  ; <(s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "200,7,200,9") ; Occ)> x) => o
            |}
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "occan-let", "190,2,201,5")
             ; fail

  occan-var =
    s-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "occan-var", "203,2,209,6")
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "204,4,209,6")
    ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "204,4,204,10")
       ; ?Var(x))
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "205,6,209,6")
    ; where(s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "206,8,208,27")
            ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "206,8,206,20")
               ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "206,8,206,14")
                  ; <(s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "206,9,206,11") ; Occ)> x) => o1)
            ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "207,3,208,27")
            ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "207,3,207,58")
               ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "207,3,207,52")
                  ; <(s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "207,4,207,10") ; inc-occ)> ( o1
                                                                                                                      , <s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "207,19,207,22") ; subt> ( <s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "207,26,207,33") ; LamLevel> ()
                                                                                                                                                                                                                      , <s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "207,40,207,47") ; LamLevel> x
                                                                                                                                                                                                                      )
                                                                                                                      )) => o2)
            ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "208,4,208,27")
            ; rules ( Occ.x :
                        x -> o2 ))
    < s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "occan-var", "203,2,209,6")
    + s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "occan-var", "203,2,209,6")
      ; fail

  occan-case :
    Case(e1, alt1*) -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "occan-case", "211,2,214,29")> Case(e2, alt2*)
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "occan-case", "211,2,214,29")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "occan-case", "211,2,214,29")
             ; fail
    where s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "213,10,214,29")
          ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "213,10,213,25")
             ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "213,10,213,19")
                ; <(s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "213,11,213,15") ; occan)> e1) => e2)
          ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "214,3,214,29")
          ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "214,3,214,20")
             ; <(s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "214,4,214,13") ; occan-alts)> alt1*) => alt2*
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "occan-case", "211,2,214,29")
             ; fail

  occan-alts :
    [] -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "occan-alts", "216,2,217,11")> []
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "occan-alts", "216,2,217,11")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "occan-alts", "216,2,217,11")
             ; fail

  occan-alts :
    [Alt(e)] -> <r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "occan-alts", "219,2,220,30")> [ Alt(
                                                                                                                        <s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "220,22,220,26") ; occan> e
                                                                                                                      )
                                                                                                                    ]
    where r-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "occan-alts", "219,2,220,30")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "occan-alts", "219,2,220,30")
             ; fail

  occan-alts =
    s-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "occan-alts", "222,2,224,52")
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "223,4,224,52")
    ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "223,4,223,11")
       ; ?[_, _|_])
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "224,6,224,52")
    ; merge-Occ(
        s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "224,16,224,32")
        ; [s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "224,17,224,26")
           ; Alt(
               s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "224,21,224,25") ; occan
             )|s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "224,30,224,31") ; id]
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "224,35,224,51")
        ; [s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "224,36,224,37") ; id|s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "224,41,224,50") ; occan-alts]
      )
    < s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "occan-alts", "222,2,224,52")
    + s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "occan-alts", "222,2,224,52")
      ; fail


strategies
  merge-Occ(s1, s2) =
    s-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-Occ", "228,2,229,75")
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "229,4,229,75")
    ; dr-symbolic-merge(
        s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "229,22,229,30") ; merge-occ
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "229,33,229,47")
        ; aux-Occ(|(), ())
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "229,50,229,58") ; redef-Occ
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "229,61,229,62") ; s1
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "229,65,229,66") ; s2
      | "Occ"
      )
    < s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-Occ", "228,2,229,75")
    + s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "merge-Occ", "228,2,229,75")
      ; fail

  redef-Occ =
    s-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "redef-Occ", "231,2,232,35")
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "232,4,232,35")
    ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "232,4,232,10")
       ; ?(x, o))
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "232,13,232,35")
    ; rules ( Occ.x :
                x -> o )
    < s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "redef-Occ", "231,2,232,35")
    + s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "redef-Occ", "231,2,232,35")
      ; fail


strategies
  dr-symbolic-merge(merge, aux, redef, s1, s2|R) =
    s-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "dr-symbolic-merge", "238,2,250,59")
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "239,4,250,59")
    ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "239,4,242,4")
       ; where(s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "240,6,241,30")
               ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "240,6,240,31")
                  ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "240,6,240,24")
                     ; dr-get-rule-set(|R)) => rs2)
               ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "241,8,241,30")
               ; dr-start-change-set(|R)))
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "243,6,250,59")
    ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "243,6,243,7") ; s1)
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "244,6,250,59")
    ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "244,6,248,6")
       ; where(s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "245,8,247,32")
               ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "245,8,245,33")
                  ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "245,8,245,26")
                     ; dr-get-rule-set(|R)) => rs1)
               ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "246,10,247,32")
               ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "246,10,246,34")
                  ; <(s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "246,11,246,29")
                      ; dr-set-rule-set(|R))> rs2)
               ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "247,10,247,32")
               ; dr-start-change-set(|R)))
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "249,6,250,59")
    ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "249,6,249,7") ; s2)
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "250,6,250,59")
    ; dr-symbolic-merge-rulesets(
        s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "250,33,250,37") ; merge
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "250,40,250,42") ; aux
      , s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "250,45,250,49") ; redef
      | rs1
      , R
      )
    < s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "dr-symbolic-merge", "238,2,250,59")
    + s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "dr-symbolic-merge", "238,2,250,59")
      ; fail

  dr-symbolic-merge-rulesets(merge, aux, redef|rs, R) =
    s-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "dr-symbolic-merge-rulesets", "253,2,259,4")
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "254,4,259,4")
    ; where(s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "255,6,258,35")
            ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "255,6,255,34")
               ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "255,6,255,8") ; !rs) => [ChangeSet(_, _, ht1)|_])
            ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "256,8,258,35")
            ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "256,8,256,27")
               ; <(s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "256,9,256,22") ; hashtable-keys)> ht1)
            ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "257,8,258,35")
            ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "257,8,257,77")
               ; map(
                   s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "257,12,257,76")
                   ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "257,12,257,14") ; Snd)
                   ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "257,17,257,76")
                   ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "257,17,257,69")
                      ; !( <s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "257,20,257,21") ; id>
                         , <s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "257,26,257,30") ; merge> ( <s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "257,34,257,59")
                                                                                                                             ; dr-symbolic-lookup(
                                                                                                                                 s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "257,53,257,55") ; aux
                                                                                                                               | rs
                                                                                                                               )>
                                                                                                                          , <s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "257,64,257,66") ; Occ>
                                                                                                                          )
                         ))
                   ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "257,72,257,76")
                   ; redef
                 ))
            ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "258,8,258,35")
            ; dr-commit-change-set(|"Occ"))
    < s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "dr-symbolic-merge-rulesets", "253,2,259,4")
    + s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "dr-symbolic-merge-rulesets", "253,2,259,4")
      ; fail

  dr-symbolic-lookup(aux|rs) =
    s-enter(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "dr-symbolic-lookup", "263,2,266,15")
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "264,4,266,15")
    ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "264,4,264,5") ; ?x)
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "265,6,266,15")
    ; (s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "265,6,265,28")
       ; <(s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "265,7,265,24")
           ; dr-lookup-rule(|x))> rs)
    ; s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "266,6,266,15")
    ; ?[<s-step(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "266,9,266,11") ; aux>|_]
    < s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "dr-symbolic-lookup", "263,2,266,15")
    + s-exit(|"strategoxt/stratego-libraries/strc/tests/test2/occan.str", "dr-symbolic-lookup", "263,2,266,15")
      ; fail