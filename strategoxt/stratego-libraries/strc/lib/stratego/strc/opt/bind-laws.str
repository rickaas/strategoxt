module bind-laws

imports
  org.strategoxt.imp.debuggers.stratego.runtime


imports
  Stratego
  stratego/strc/match/automaton


strategies


rules

  LetNoDefs :
    Let([], s) -> <r-exit(
                   | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
                   , "LetNoDefs"
                   , "6"
                   , "2"
                   , "7"
                   , "18"
                   )> s
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str", "LetNoDefs", "6,2,7,18")
          <+ r-exit(
             | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
             , "LetNoDefs"
             , "6"
             , "2"
             , "7"
             , "18"
             )
             ; fail

  LetHoist :
    Let(
      [SDefT(f, [], [], s)]
    , CallT(SVar(f), [], [])
    ) -> <r-exit(
          | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
          , "LetHoist"
          , "9"
          , "2"
          , "11"
          , "47"
          )> s
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str", "LetHoist", "9,2,11,47")
          <+ r-exit(
             | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
             , "LetHoist"
             , "9"
             , "2"
             , "11"
             , "47"
             )
             ; fail
    where s-step(
          | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
          , "11"
          , "10"
          , "11"
          , "47"
          )
          ; <(s-step(
              | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
              , "11"
              , "11"
              , "11"
              , "44"
              )
              ; not(s-step(
                    | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
                    , "11"
                    , "15"
                    , "11"
                    , "43"
                    )
                    ; oncetd(
                        s-step(
                        | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
                        , "11"
                        , "22"
                        , "11"
                        , "42"
                        )
                        ; ?CallT(SVar(f), [], [])
                      )))> s
          <+ r-exit(
             | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
             , "LetHoist"
             , "9"
             , "2"
             , "11"
             , "47"
             )
             ; fail

  LetHoist :
    Let(defs1, Let(defs2, s)) -> <r-exit(
                                  | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
                                  , "LetHoist"
                                  , "13"
                                  , "2"
                                  , "14"
                                  , "60"
                                  )> Let(
                                       <s-step(
                                        | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
                                        , "14"
                                        , "38"
                                        , "14"
                                        , "41"
                                        )
                                        ; conc> (defs1, defs2)
                                     , s
                                     )
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str", "LetHoist", "13,2,14,60")
          <+ r-exit(
             | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
             , "LetHoist"
             , "13"
             , "2"
             , "14"
             , "60"
             )
             ; fail


rules

  Inline1 :
    Let(
      [SDef(f, [], s)]
    , Call(SVar(f), [])
    ) -> <r-exit(
          | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
          , "Inline1"
          , "42"
          , "2"
          , "43"
          , "48"
          )> s
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str", "Inline1", "42,2,43,48")
          <+ r-exit(
             | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
             , "Inline1"
             , "42"
             , "2"
             , "43"
             , "48"
             )
             ; fail

  Inline :
    Let(defs1, s1) -> <r-exit(
                       | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
                       , "Inline"
                       , "51"
                       , "2"
                       , "56"
                       , "25"
                       )> Let(defs2, s2)
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str", "Inline", "51,2,56,25")
          <+ r-exit(
             | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
             , "Inline"
             , "51"
             , "2"
             , "56"
             , "25"
             )
             ; fail
    where s-step(
          | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
          , "53"
          , "10"
          , "56"
          , "25"
          )
          ; (s-step(
             | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
             , "53"
             , "10"
             , "56"
             , "16"
             )
             ; <(s-step(
                 | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
                 , "53"
                 , "11"
                 , "55"
                 , "51"
                 )
                 ; at-suffix(
                     s-step(
                     | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
                     , "53"
                     , "21"
                     , "55"
                     , "49"
                     )
                     ; \ [SDef(f, [], s)|defs] -> defs
                         where s-step(
                               | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
                               , "54"
                               , "29"
                               , "55"
                               , "47"
                               )
                               ; (s-step(
                                  | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
                                  , "54"
                                  , "29"
                                  , "54"
                                  , "68"
                                  )
                                  ; (s-step(
                                     | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
                                     , "54"
                                     , "29"
                                     , "54"
                                     , "62"
                                     )
                                     ; <(s-step(
                                         | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
                                         , "54"
                                         , "30"
                                         , "54"
                                         , "58"
                                         )
                                         ; oncetd(
                                             s-step(
                                             | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
                                             , "54"
                                             , "37"
                                             , "54"
                                             , "57"
                                             )
                                             ; (s-step(
                                                | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
                                                , "54"
                                                , "37"
                                                , "54"
                                                , "53"
                                                )
                                                ; ?Call(SVar(f), []))
                                             ; s-step(
                                               | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
                                               , "54"
                                               , "56"
                                               , "54"
                                               , "57"
                                               )
                                             ; !s
                                           ))> s1) => s2)
                               ; s-step(
                                 | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
                                 , "55"
                                 , "8"
                                 , "55"
                                 , "47"
                                 )
                               ; <(s-step(
                                   | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
                                   , "55"
                                   , "9"
                                   , "55"
                                   , "23"
                                   )
                                   ; not(s-step(
                                         | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
                                         , "55"
                                         , "13"
                                         , "55"
                                         , "22"
                                         )
                                         ; is-subterm))> ( Call(SVar(f), [])
                                                         , s2
                                                         ) \
                   ))> defs1) => defs2
          <+ r-exit(
             | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
             , "Inline"
             , "51"
             , "2"
             , "56"
             , "25"
             )
             ; fail

  Dead :
    Let(
      [SDef(f, xs, s1)]
    , s2
    ) -> <r-exit(
          | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
          , "Dead"
          , "64"
          , "2"
          , "66"
          , "40"
          )> s2
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str", "Dead", "64,2,66,40")
          <+ r-exit(
             | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
             , "Dead"
             , "64"
             , "2"
             , "66"
             , "40"
             )
             ; fail
    where s-step(
          | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
          , "66"
          , "10"
          , "66"
          , "40"
          )
          ; <(s-step(
              | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
              , "66"
              , "11"
              , "66"
              , "25"
              )
              ; not(s-step(
                    | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
                    , "66"
                    , "15"
                    , "66"
                    , "24"
                    )
                    ; is-subterm))> (SVar(f), s2)
          <+ r-exit(
             | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
             , "Dead"
             , "64"
             , "2"
             , "66"
             , "40"
             )
             ; fail

  HoistLet :
    Seq(s1, Let(sdefs, s2)) -> <r-exit(
                                | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
                                , "HoistLet"
                                , "70"
                                , "2"
                                , "72"
                                , "26"
                                )> Let(sdefs, Seq(s1, s2))
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str", "HoistLet", "70,2,72,26")
          <+ r-exit(
             | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
             , "HoistLet"
             , "70"
             , "2"
             , "72"
             , "26"
             )
             ; fail

  HoistLetFromCase :
    Case(lab, t, alts, def) -> <r-exit(
                                | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
                                , "HoistLetFromCase"
                                , "74"
                                , "2"
                                , "78"
                                , "40"
                                )> Let(
                                     sdefs
                                   , Case(lab, t, alts', def)
                                   )
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str", "HoistLetFromCase", "74,2,78,40")
          <+ r-exit(
             | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
             , "HoistLetFromCase"
             , "74"
             , "2"
             , "78"
             , "40"
             )
             ; fail
    where s-step(
          | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
          , "77"
          , "10"
          , "78"
          , "40"
          )
          ; (s-step(
             | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
             , "77"
             , "10"
             , "77"
             , "59"
             )
             ; (s-step(
                | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
                , "77"
                , "10"
                , "77"
                , "50"
                )
                ; (s-step(
                   | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
                   , "77"
                   , "10"
                   , "77"
                   , "41"
                   )
                   ; <(s-step(
                       | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
                       , "77"
                       , "11"
                       , "77"
                       , "35"
                       )
                       ; (s-step(
                          | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
                          , "77"
                          , "11"
                          , "77"
                          , "27"
                          )
                          ; map(
                              s-step(
                              | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
                              , "77"
                              , "15"
                              , "77"
                              , "26"
                              )
                              ; AltGiveSDefs
                            ))
                       ; s-step(
                         | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
                         , "77"
                         , "30"
                         , "77"
                         , "35"
                         )
                       ; concat)> alts) => sdefs) => [_|_])
          ; s-step(
            | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
            , "78"
            , "10"
            , "78"
            , "40"
            )
          ; (s-step(
             | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
             , "78"
             , "10"
             , "78"
             , "31"
             )
             ; <(s-step(
                 | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
                 , "78"
                 , "11"
                 , "78"
                 , "25"
                 )
                 ; map(
                     s-step(
                     | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
                     , "78"
                     , "15"
                     , "78"
                     , "24"
                     )
                     ; AltDropLet
                   ))> alts) => alts'
          <+ r-exit(
             | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
             , "HoistLetFromCase"
             , "74"
             , "2"
             , "78"
             , "40"
             )
             ; fail

  AltDropLet :
    Alt(
      c
    , args
    , ann
    , Let(sdefs, s)
    ) -> <r-exit(
          | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
          , "AltDropLet"
          , "80"
          , "2"
          , "81"
          , "59"
          )> Alt(c, args, ann, s)
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str", "AltDropLet", "80,2,81,59")
          <+ r-exit(
             | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
             , "AltDropLet"
             , "80"
             , "2"
             , "81"
             , "59"
             )
             ; fail

  AltGiveSDefs :
    Alt(
      c
    , args
    , ann
    , Let(sdefs, s)
    ) -> <r-exit(
          | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
          , "AltGiveSDefs"
          , "83"
          , "2"
          , "84"
          , "44"
          )> sdefs
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str", "AltGiveSDefs", "83,2,84,44")
          <+ r-exit(
             | "strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/bind-laws.str"
             , "AltGiveSDefs"
             , "83"
             , "2"
             , "84"
             , "44"
             )
             ; fail