module idfail-laws

imports
  org.strategoxt.imp.debuggers.stratego.runtime


imports
  Stratego


strategies
  ElimId =
    s-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "ElimId", "5,2,5,60")
    ; s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "5,11,5,60")
    ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "5,11,5,12") ; I1
       + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "5,16,5,60")
         ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "5,16,5,17") ; I2
            + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "5,21,5,60")
              ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "5,21,5,22") ; I3
                 + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "5,26,5,60")
                   ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "5,26,5,27") ; I4
                      + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "5,31,5,60")
                        ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "5,31,5,32") ; I7
                           + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "5,36,5,60")
                             ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "5,36,5,37") ; I8
                                + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "5,41,5,60")
                                  ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "5,41,5,42") ; I9
                                     + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "5,46,5,60")
                                       ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "5,46,5,48") ; I10
                                          + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "5,52,5,60")
                                            ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "5,52,5,54") ; I12
                                               + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "5,58,5,60") ; I16)))))))))
    < s-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "ElimId", "5,2,5,60")
    + s-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "ElimId", "5,2,5,60")
      ; fail


rules

  I1 :
    Test(Id()) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I1", "8,2,8,32")> Id()
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I1", "8,2,8,32")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I1", "8,2,8,32")
             ; fail

  I2 :
    Not(Id()) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I2", "9,2,9,34")> Fail()
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I2", "9,2,9,34")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I2", "9,2,9,34")
             ; fail

  I3 :
    Seq(Id(), s) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I3", "10,2,10,29")> s
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I3", "10,2,10,29")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I3", "10,2,10,29")
             ; fail

  I4 :
    Seq(s, Id()) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I4", "11,2,11,29")> s
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I4", "11,2,11,29")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I4", "11,2,11,29")
             ; fail

  I5 :
    Choice(s, Id()) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I5", "12,2,12,32")> Id()
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I5", "12,2,12,32")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I5", "12,2,12,32")
             ; fail

  I6 :
    Choice(Id(), s) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I6", "13,2,13,32")> Id()
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I6", "13,2,13,32")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I6", "13,2,13,32")
             ; fail

  I7 :
    LChoice(Id(), s) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I7", "14,2,14,32")> Id()
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I7", "14,2,14,32")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I7", "14,2,14,32")
             ; fail

  I8 :
    Scope(xs, Id()) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I8", "15,2,15,32")> Id()
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I8", "15,2,15,32")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I8", "15,2,15,32")
             ; fail

  I9 :
    Rec(x, Id()) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I9", "16,2,16,32")> Id()
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I9", "16,2,16,32")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I9", "16,2,16,32")
             ; fail

  I10 :
    All(Id()) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I10", "17,2,17,32")> Id()
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I10", "17,2,17,32")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I10", "17,2,17,32")
             ; fail

  I12 :
    Where(Id()) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I12", "18,2,18,32")> Id()
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I12", "18,2,18,32")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I12", "18,2,18,32")
             ; fail

  I16 :
    Match(Wld()) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I16", "19,2,19,32")> Id()
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I16", "19,2,19,32")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "I16", "19,2,19,32")
             ; fail

  NotValid :
    One(Id()) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "NotValid", "21,2,21,32")> Id()
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "NotValid", "21,2,21,32")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "NotValid", "21,2,21,32")
             ; fail

  NotValid :
    Some(Id()) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "NotValid", "22,2,22,32")> Id()
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "NotValid", "22,2,22,32")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "NotValid", "22,2,22,32")
             ; fail


strategies
  ElimFail =
    s-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "ElimFail", "26,2,28,42")
    ; s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "27,4,28,42")
    ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "27,4,27,5") ; F1
       + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "27,9,28,42")
         ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "27,9,27,10") ; F2
            + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "27,14,28,42")
              ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "27,14,27,15") ; F3
                 + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "27,19,28,42")
                   ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "27,19,27,20") ; F5
                      + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "27,24,28,42")
                        ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "27,24,27,25") ; F6
                           + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "27,29,28,42")
                             ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "27,29,27,30") ; F7
                                + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "27,34,28,42")
                                  ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "27,34,27,35") ; F8
                                     + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "27,39,28,42")
                                       ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "27,39,27,41") ; F10
                                          + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "28,4,28,42")
                                            ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "28,4,28,6") ; F11
                                               + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "28,10,28,42")
                                                 ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "28,10,28,12") ; F12
                                                    + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "28,16,28,42")
                                                      ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "28,16,28,18") ; F13
                                                         + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "28,22,28,42")
                                                           ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "28,22,28,24") ; F14
                                                              + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "28,28,28,42")
                                                                ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "28,28,28,30") ; F15
                                                                   + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "28,34,28,42")
                                                                     ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "28,34,28,36") ; F16
                                                                        + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "28,40,28,42") ; F17))))))))))))))
    < s-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "ElimFail", "26,2,28,42")
    + s-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "ElimFail", "26,2,28,42")
      ; fail


rules

  F1 :
    Test(Fail()) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F1", "32,2,32,35")> Fail()
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F1", "32,2,32,35")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F1", "32,2,32,35")
             ; fail

  F2 :
    Not(Fail()) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F2", "33,2,33,33")> Id()
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F2", "33,2,33,33")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F2", "33,2,33,33")
             ; fail

  F3 :
    Seq(Fail(), s) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F3", "34,2,34,35")> Fail()
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F3", "34,2,34,35")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F3", "34,2,34,35")
             ; fail

  F4 :
    Seq(s, Fail()) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F4", "35,2,35,35")> Fail()
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F4", "35,2,35,35")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F4", "35,2,35,35")
             ; fail

  F5 :
    Scope(xs, Fail()) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F5", "36,2,36,35")> Fail()
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F5", "36,2,36,35")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F5", "36,2,36,35")
             ; fail

  F6 :
    Rec(x, Fail()) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F6", "37,2,37,35")> Fail()
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F6", "37,2,37,35")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F6", "37,2,37,35")
             ; fail

  F7 :
    Some(Fail()) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F7", "38,2,38,35")> Fail()
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F7", "38,2,38,35")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F7", "38,2,38,35")
             ; fail

  F8 :
    One(Fail()) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F8", "39,2,39,35")> Fail()
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F8", "39,2,39,35")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F8", "39,2,39,35")
             ; fail

  F10 :
    Cong(f, ls) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F10", "40,2,40,61")> Fail()
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F10", "40,2,40,61")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F10", "40,2,40,61")
             ; fail
    where s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "40,43,40,61")
          ; <(s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "40,44,40,57")
              ; fetch(
                  s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "40,50,40,56")
                  ; ?Fail()
                ))> ls
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F10", "40,2,40,61")
             ; fail

  F11 :
    Choice(Fail(), s) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F11", "41,2,41,30")> s
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F11", "41,2,41,30")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F11", "41,2,41,30")
             ; fail

  F12 :
    Choice(s, Fail()) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F12", "42,2,42,30")> s
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F12", "42,2,42,30")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F12", "42,2,42,30")
             ; fail

  F13 :
    LChoice(Fail(), s) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F13", "43,2,43,30")> s
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F13", "43,2,43,30")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F13", "43,2,43,30")
             ; fail

  F14 :
    LChoice(s, Fail()) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F14", "44,2,44,30")> s
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F14", "44,2,44,30")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F14", "44,2,44,30")
             ; fail

  F15 :
    Where(Fail()) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F15", "45,2,45,35")> Fail()
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F15", "45,2,45,35")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F15", "45,2,45,35")
             ; fail

  F16 :
    GuardedLChoice(s1, s2, Fail()) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F16", "47,2,47,52")> Seq(s1, s2)
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F16", "47,2,47,52")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F16", "47,2,47,52")
             ; fail

  F17 :
    GuardedLChoice(Fail(), s1, s2) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F17", "48,2,48,43")> s2
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F17", "48,2,48,43")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "F17", "48,2,48,43")
             ; fail

  NotValid :
    All(Fail()) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "NotValid", "50,2,50,33")> Fail()
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "NotValid", "50,2,50,33")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/opt/idfail-laws.str", "NotValid", "50,2,50,33")
             ; fail