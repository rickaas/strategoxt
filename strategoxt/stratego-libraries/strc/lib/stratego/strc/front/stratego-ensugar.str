module stratego-ensugar

imports
  org.strategoxt.imp.debuggers.stratego.runtime


imports
  Stratego-Amb
  libstratego-lib


strategies
  Stratego-Ensugar =
    s-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "Stratego-Ensugar", "13,2,18,6")
    ; s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "14,6,18,6")
    ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "14,6,14,28")
       ; try(
           s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "14,10,14,26")
           ; \ ""#([x]) -> x \
         ))
    ; s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "15,6,18,6")
    ; topdown(
        s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "16,8,17,23")
        ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "16,8,16,22")
           ; repeat(
               s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "16,15,16,21") ; Ensugar
             ))
        ; s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "17,8,17,23")
        ; try(
            s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "17,12,17,22") ; EnsugarOnce
          )
      )
    < s-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "Stratego-Ensugar", "13,2,18,6")
    + s-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "Stratego-Ensugar", "13,2,18,6")
      ; fail


rules

  Ensugar :
    Anno(preterm, Wld()) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "Ensugar", "22,2,23,46")> NoAnnoList(preterm)
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "Ensugar", "22,2,23,46")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "Ensugar", "22,2,23,46")
             ; fail

  Ensugar :
    Op("", xs) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "Ensugar", "25,2,26,26")> Tuple(xs)
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "Ensugar", "25,2,26,26")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "Ensugar", "25,2,26,26")
             ; fail

  Ensugar :
    Prim(f, xs) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "Ensugar", "28,2,30,36")> Prim(
                                                                                                                                           <s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "29,25,29,36") ; double-quote> f
                                                                                                                                         , xs
                                                                                                                                         )
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "Ensugar", "28,2,30,36")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "Ensugar", "28,2,30,36")
             ; fail
    where s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "30,12,30,36")
          ; <(s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "30,13,30,33")
              ; not(s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "30,17,30,32") ; is-double-quoted))> f
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "Ensugar", "28,2,30,36")
             ; fail

  Ensugar :
    PrimT(f, xs, ys) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "Ensugar", "32,2,34,36")> PrimT(
                                                                                                                                                <s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "33,31,33,42") ; double-quote> f
                                                                                                                                              , xs
                                                                                                                                              , ys
                                                                                                                                              )
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "Ensugar", "32,2,34,36")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "Ensugar", "32,2,34,36")
             ; fail
    where s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "34,12,34,36")
          ; <(s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "34,13,34,33")
              ; not(s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "34,17,34,32") ; is-double-quoted))> f
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "Ensugar", "32,2,34,36")
             ; fail

  Ensugar :
    Call(f, []) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "Ensugar", "36,2,37,31")> CallNoArgs(f)
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "Ensugar", "36,2,37,31")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "Ensugar", "36,2,37,31")
             ; fail

  Ensugar :
    CallT(f, [], []) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "Ensugar", "39,2,40,36")> CallNoArgs(f)
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "Ensugar", "39,2,40,36")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "Ensugar", "39,2,40,36")
             ; fail

  Ensugar :
    Op("Nil", []) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "Ensugar", "42,2,43,27")> List([])
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "Ensugar", "42,2,43,27")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "Ensugar", "42,2,43,27")
             ; fail

  Ensugar =
    s-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "Ensugar", "45,2,52,6")
    ; s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "46,4,52,6")
    ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "46,4,46,20")
       ; ?Op("Cons", [_, _]))
    ; s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "47,6,52,6")
    ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "47,6,47,17") ; implode-cons)
    ; s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "48,6,52,6")
    ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "48,6,48,15") ; split-last)
    ; s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "49,9,51,58")
    ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "49,9,49,60")
       ; \ ( elems
           , NoAnnoList(Op("Nil", []))
           ) -> List(elems) \
       <+ s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "50,9,51,58")
          ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "50,9,50,48")
             ; \ (elems, Op("Nil", [])) -> List(elems) \
             <+ s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "51,9,51,58")
                ; \ (elems, last) -> ListTail(elems, last) \))
    < s-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "Ensugar", "45,2,52,6")
    + s-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "Ensugar", "45,2,52,6")
      ; fail

  implode-cons =
    s-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "implode-cons", "54,2,56,13")
    ; s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "55,4,56,13")
    ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "55,4,55,56")
       ; \ Op("Cons", [e, tail]) -> [e|<s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "55,36,55,47") ; implode-cons> tail] \
       <+ s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "56,7,56,13")
          ; ![<s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "56,10,56,11") ; id>])
    < s-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "implode-cons", "54,2,56,13")
    + s-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "implode-cons", "54,2,56,13")
      ; fail


rules

  EnsugarOnce :
    Anno(t, ls) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "EnsugarOnce", "60,2,62,35")> AnnoList(t, ts)
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "EnsugarOnce", "60,2,62,35")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "EnsugarOnce", "60,2,62,35")
             ; fail
    where s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "62,12,62,35")
          ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "62,12,62,23")
             ; <(s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "62,13,62,19") ; Ensugar)> ls) => List(ts)
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "EnsugarOnce", "60,2,62,35")
             ; fail

  EnsugarOnce :
    Anno(t, Op("Nil", [])) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "EnsugarOnce", "64,2,65,41")> NoAnnoList(t)
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "EnsugarOnce", "64,2,65,41")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "EnsugarOnce", "64,2,65,41")
             ; fail

  EnsugarOnce :
    Int(x) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "EnsugarOnce", "67,2,68,35")> Int(
                                                                                                                                          <s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "68,19,68,31") ; int-to-string> x
                                                                                                                                        )
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "EnsugarOnce", "67,2,68,35")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "EnsugarOnce", "67,2,68,35")
             ; fail

  EnsugarOnce :
    Real(x) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "EnsugarOnce", "70,2,71,38")> Real(
                                                                                                                                           <s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "71,21,71,34") ; real-to-string> x
                                                                                                                                         )
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "EnsugarOnce", "70,2,71,38")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "EnsugarOnce", "70,2,71,38")
             ; fail

  EnsugarOnce :
    Str(x) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "EnsugarOnce", "73,2,79,20")> Str(y)
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "EnsugarOnce", "73,2,79,20")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "EnsugarOnce", "73,2,79,20")
             ; fail
    where s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "75,12,79,20")
          ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "75,12,79,15")
             ; <(s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "75,13,79,12")
                 ; string-as-chars(
                     s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "76,14,78,31")
                     ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "76,14,76,40")
                        ; not(s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "76,18,76,39") ; is-double-quoted-chars))
                     ; s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "77,14,78,31")
                     ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "77,14,77,25") ; escape-chars)
                     ; s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "78,14,78,31")
                     ; double-quote-chars
                   ))> x) => y
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "EnsugarOnce", "73,2,79,20")
             ; fail


strategies
  EnsugarOnce =
    s-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "EnsugarOnce", "83,2,97,27")
    ; s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "84,6,97,27")
    ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "84,6,84,35")
       ; DefaultVarDec(
           s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "84,20,84,34") ; AddLeadingPrime
         )
       + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "85,6,97,27")
         ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "85,6,85,32")
            ; RDef(
                s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "85,11,85,25") ; AddLeadingPrime
              , s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "85,27,85,28") ; id
              , s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "85,30,85,31") ; id
              )
            + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "86,6,97,27")
              ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "86,6,86,36")
                 ; RDefT(
                     s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "86,12,86,26") ; AddLeadingPrime
                   , s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "86,28,86,29") ; id
                   , s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "86,31,86,32") ; id
                   , s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "86,34,86,35") ; id
                   )
                 + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "87,6,97,27")
                   ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "87,6,87,35")
                      ; RDefNoArgs(
                          s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "87,17,87,31") ; AddLeadingPrime
                        , s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "87,33,87,34") ; id
                        )
                      + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "88,6,97,27")
                        ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "88,6,88,32")
                           ; SDef(
                               s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "88,11,88,25") ; AddLeadingPrime
                             , s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "88,27,88,28") ; id
                             , s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "88,30,88,31") ; id
                             )
                           + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "89,6,97,27")
                             ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "89,6,89,36")
                                ; SDefT(
                                    s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "89,12,89,26") ; AddLeadingPrime
                                  , s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "89,28,89,29") ; id
                                  , s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "89,31,89,32") ; id
                                  , s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "89,34,89,35") ; id
                                  )
                                + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "90,6,97,27")
                                  ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "90,6,90,35")
                                     ; SDefNoArgs(
                                         s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "90,17,90,31") ; AddLeadingPrime
                                       , s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "90,33,90,34") ; id
                                       )
                                     + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "91,6,97,27")
                                       ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "91,6,91,35")
                                          ; ExtSDef(
                                              s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "91,14,91,28") ; AddLeadingPrime
                                            , s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "91,30,91,31") ; id
                                            , s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "91,33,91,34") ; id
                                            )
                                          + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "92,6,97,27")
                                            ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "92,6,92,31")
                                               ; VarDec(
                                                   s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "92,13,92,27") ; AddLeadingPrime
                                                 , s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "92,29,92,30") ; id
                                                 )
                                               + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "93,6,97,27")
                                                 ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "93,6,93,25")
                                                    ; Var(
                                                        s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "93,10,93,24") ; AddLeadingPrime
                                                      )
                                                    + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "94,6,97,27")
                                                      ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "94,6,94,26")
                                                         ; SVar(
                                                             s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "94,11,94,25") ; AddLeadingPrime
                                                           )
                                                         + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "95,6,97,27")
                                                           ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "95,6,95,31")
                                                              ; OpDecl(
                                                                  s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "95,13,95,27") ; AddLeadingPrime
                                                                , s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "95,29,95,30") ; id
                                                                )
                                                              + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "96,6,97,27")
                                                                ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "96,6,96,34")
                                                                   ; ExtOpDecl(
                                                                       s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "96,16,96,30") ; AddLeadingPrime
                                                                     , s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "96,32,96,33") ; id
                                                                     )
                                                                   + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "97,6,97,27")
                                                                     ; Op(
                                                                         s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "97,9,97,23") ; AddLeadingPrime
                                                                       , s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "97,25,97,26") ; id
                                                                       ))))))))))))))
    < s-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "EnsugarOnce", "83,2,97,27")
    + s-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "EnsugarOnce", "83,2,97,27")
      ; fail

  AddLeadingPrime :
    x -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "AddLeadingPrime", "99,2,102,50")> x2
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "AddLeadingPrime", "99,2,102,50")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "AddLeadingPrime", "99,2,102,50")
             ; fail
    where s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "101,10,102,50")
          ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "101,10,101,41")
             ; <(s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "101,11,101,16") ; member)> (x, StrategoKeywords()))
          ; s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "102,10,102,50")
          ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "102,10,102,44")
             ; <(s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "102,11,102,41")
                 ; string-as-chars(
                     s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "102,27,102,40")
                     ; !['\''|<s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "102,37,102,38") ; id>]
                   ))> x) => x2
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/stratego-ensugar.str", "AddLeadingPrime", "99,2,102,50")
             ; fail


overlays
  StrategoKeywords = [ "all"
                     , "constructors"
                     , "fail"
                     , "id"
                     , "in"
                     , "let"
                     , "module"
                     , "not"
                     , "one"
                     , "overlays"
                     , "override"
                     , "prim"
                     , "rules"
                     , "script"
                     , "signature"
                     , "some"
                     , "sorts"
                     , "strategies"
                     , "stratego"
                     , "test"
                     , "thread"
                     , "where"
                     ]