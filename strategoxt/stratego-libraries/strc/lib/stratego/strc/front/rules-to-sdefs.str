module rules-to-sdefs

imports
  org.strategoxt.imp.debuggers.stratego.runtime


imports
  Stratego-Sugar
  stratego/strc/lib/stratlib


strategies
  rules-to-sdefs =
    s-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "rules-to-sdefs", "10,2,11,97")
    ; s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "11,4,11,97")
    ; alltd(
        s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "11,10,11,96")
        ; Strategies(
            s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "11,21,11,95")
            ; map(
                s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "11,25,11,94")
                ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "11,25,11,71")
                   ; try(
                       s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "11,29,11,70")
                       ; ignore-anno-def(
                           s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "11,45,11,69")
                           ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "11,45,11,50") ; RDtoSD
                              + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "11,54,11,69") ; DeclareVariables)
                         )
                     ))
                ; s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "11,74,11,94")
                ; replace-call-and-rdef
              )
          )
      )
    < s-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "rules-to-sdefs", "10,2,11,97")
    + s-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "rules-to-sdefs", "10,2,11,97")
      ; fail

  rules-to-sdefs-def =
    s-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "rules-to-sdefs-def", "13,2,17,4")
    ; s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "14,4,17,4")
    ; ignore-anno-def(
        s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "15,6,16,28")
        ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "15,6,15,36")
           ; try(
               s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "15,10,15,35")
               ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "15,10,15,15") ; RDtoSD
                  <+ s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "15,20,15,35") ; DeclareVariables)
             ))
        ; s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "16,8,16,28")
        ; replace-call-and-rdef
      )
    < s-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "rules-to-sdefs-def", "13,2,17,4")
    + s-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "rules-to-sdefs-def", "13,2,17,4")
      ; fail


rules

  RDtoSD :
    RDef(f, xs, r) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "RDtoSD", "21,2,22,72")> SDefT(
                                                                                                                                           f
                                                                                                                                         , xs
                                                                                                                                         , []
                                                                                                                                         , Scope(
                                                                                                                                             <s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "22,46,22,50") ; tvars> r
                                                                                                                                           , SRule(r){Id(f)}
                                                                                                                                           )
                                                                                                                                         )
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "RDtoSD", "21,2,22,72")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "RDtoSD", "21,2,22,72")
             ; fail

  RDtoSD :
    RDefT(f, xs, ys, r) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "RDtoSD", "24,2,27,24")> SDefT(
                                                                                                                                                f
                                                                                                                                              , xs
                                                                                                                                              , ys
                                                                                                                                              , Scope(
                                                                                                                                                  <s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "25,51,25,54") ; diff> (vs, ys')
                                                                                                                                                , SRule(r){Id(f)}
                                                                                                                                                )
                                                                                                                                              )
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "RDtoSD", "24,2,27,24")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "RDtoSD", "24,2,27,24")
             ; fail
    where s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "26,10,27,24")
          ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "26,10,26,34")
             ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "26,10,26,27")
                ; <(s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "26,11,26,23") ; declared-vars)> ys) => ys')
          ; s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "27,10,27,24")
          ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "27,10,27,18")
             ; <(s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "27,11,27,15") ; tvars)> r) => vs
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "RDtoSD", "24,2,27,24")
             ; fail

  DeclareVariables :
    SDef(f, xs, s) -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "DeclareVariables", "29,2,30,58")> SDefT(
                                                                                                                                                     f
                                                                                                                                                   , xs
                                                                                                                                                   , []
                                                                                                                                                   , Scope(
                                                                                                                                                       <s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "30,46,30,50") ; tvars> s
                                                                                                                                                     , s
                                                                                                                                                     )
                                                                                                                                                   )
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "DeclareVariables", "29,2,30,58")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "DeclareVariables", "29,2,30,58")
             ; fail

  DeclareVariables :
    SDefT(f, xs, ys, s){a*} -> <r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "DeclareVariables", "32,2,35,24")> SDefT(
                                                                                                                                                              f
                                                                                                                                                            , xs
                                                                                                                                                            , ys
                                                                                                                                                            , Scope(
                                                                                                                                                                <s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "33,55,33,58") ; diff> (vs, ys')
                                                                                                                                                              , s
                                                                                                                                                              )
                                                                                                                                                            ){a*}
    where r-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "DeclareVariables", "32,2,35,24")
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "DeclareVariables", "32,2,35,24")
             ; fail
    where s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "34,10,35,24")
          ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "34,10,34,34")
             ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "34,10,34,27")
                ; <(s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "34,11,34,23") ; declared-vars)> ys) => ys')
          ; s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "35,10,35,24")
          ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "35,10,35,18")
             ; <(s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "35,11,35,15") ; tvars)> s) => vs
          <+ r-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "DeclareVariables", "32,2,35,24")
             ; fail

  replace-call-and-rdef =
    s-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "replace-call-and-rdef", "40,2,41,52")
    ; s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "41,4,41,52")
    ; topdown(
        s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "41,12,41,51")
        ; try(
            s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "41,35,41,50") ; let-rdef-to-sdef
          )
      )
    < s-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "replace-call-and-rdef", "40,2,41,52")
    + s-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "replace-call-and-rdef", "40,2,41,52")
      ; fail

  let-rdef-to-sdef =
    s-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "let-rdef-to-sdef", "43,2,50,6")
    ; s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "44,4,50,6")
    ; let rdef-to-sdef =
            s-enter(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "rdef-to-sdef", "45,5,47,59")
            ; s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "46,7,47,59")
            ; (s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "46,7,46,59")
               ; \ RDef(f, xs, r) -> SDefT(
                                       f
                                     , xs
                                     , []
                                     , SRule(r)
                                     ) \
               + s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "47,7,47,59")
                 ; \ RDefT(f, xs, ys, r) -> SDefT(f, xs, ys, SRule(r)) \)
            < s-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "rdef-to-sdef", "45,5,47,59")
            + s-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "rdef-to-sdef", "45,5,47,59")
              ; fail
      in
        s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "49,6,49,36")
        ; Let(
            s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "49,10,49,32")
            ; list(
                s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "49,15,49,31")
                ; try(
                    s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "49,19,49,30") ; rdef-to-sdef
                  )
              )
          , s-step(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "49,34,49,35") ; id
          )
      end
    < s-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "let-rdef-to-sdef", "43,2,50,6")
    + s-exit(|"strategoxt/stratego-libraries/strc/lib/stratego/strc/front/rules-to-sdefs.str", "let-rdef-to-sdef", "43,2,50,6")
      ; fail